{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8b577b2e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"로그인\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"google-login-button\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => _ctx.login && _ctx.login(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" 로그인 폼 내용 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.identity = $event),\n    placeholder: \"아이디\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.identity]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"비밀번호\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _hoisted_2], 32 /* NEED_HYDRATION */), _hoisted_3]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","id","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","_ctx","login","_createCommentVNode","$event","$data","identity","placeholder","password","_hoisted_2","_hoisted_3"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/LoginFrom.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <form @submit.prevent=\"login\">\n      <!-- 로그인 폼 내용 -->\n      <input type=\"text\" v-model=\"identity\" placeholder=\"아이디\">\n      <input type=\"password\" v-model=\"password\" placeholder=\"비밀번호\">\n      <button type=\"submit\">로그인</button>\n    </form>\n    <div id=\"google-login-button\"></div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      identity: '',\n      password: '',\n    };\n  },\n  mounted() {\n    this.loadGoogleApi();\n  },\n  methods: {\n    loadGoogleApi() {\n      if (window.gapi) {\n        this.initGoogleLogin();\n      } else {\n        const script = document.createElement('script');\n        script.src = 'https://apis.google.com/js/platform.js';\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          this.initGoogleLogin();\n        };\n        document.head.appendChild(script);\n      }\n    },\n    initGoogleLogin() {\n      window.gapi.load('auth2', () => {\n        window.gapi.auth2.init({\n          client_id: 'YOUR_CLIENT_ID',\n        }).then(() => {\n          window.gapi.signin2.render('google-login-button', {\n            scope: 'profile email',\n            width: 240,\n            height: 50,\n            longtitle: true,\n            theme: 'dark',\n            onsuccess: this.handleGoogleLoginSuccess,\n            onfailure: (error) => console.error('Google login error:', error),\n          });\n        });\n      });\n    },\n    handleGoogleLoginSuccess(googleUser) {\n      const id_token = googleUser.getAuthResponse().id_token;\n\n      axios.post('http://127.0.0.1:8000/auth/google', { id_token })\n        .then(response => {\n          const userName = response.data.user.name;\n          const useremail = response.data.user.email;\n          const userprofile = response.data.user.profile_image || 'a';\n          sessionStorage.setItem(\"logg\", true);\n          sessionStorage.setItem('name', userName);\n          sessionStorage.setItem('email', useremail);\n          sessionStorage.setItem('profile', userprofile);\n          window.location.href = '/message';\n        })\n        .catch(error => {\n          console.error('Google login error:', error);\n          alert(\"로그인에 실패했습니다.\");\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 스타일 추가 */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;gEAKxBC,mBAAA,CAAkC;EAA1BC,IAAI,EAAC;AAAQ,GAAC,KAAG;gEAE3BD,mBAAA,CAAoC;EAA/BE,EAAE,EAAC;AAAqB;;uBAP/BC,mBAAA,CAQM,OARNC,UAQM,GAPJJ,mBAAA,CAKO;IALAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFjBC,cAAA,KAAAC,IAAA,KAE2BC,IAAA,CAAAC,KAAA,IAAAD,IAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;MAC1BG,mBAAA,cAAiB,E,gBACjBX,mBAAA,CAAwD;IAAjDC,IAAI,EAAC,MAAM;IAJxB,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAIkCC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAtBF,KAAA,CAAAC,QAAQ,E,mBACpCd,mBAAA,CAA6D;IAAtDC,IAAI,EAAC,UAAU;IAL5B,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAKsCC,KAAA,CAAAG,QAAQ,GAAAJ,MAAA;IAAEG,WAAW,EAAC;iDAAtBF,KAAA,CAAAG,QAAQ,E,GACxCC,UAAkC,C,4BAEpCC,UAAoC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}