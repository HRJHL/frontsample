{"ast":null,"code":"export default {\n  name: 'App',\n  components: {},\n  data() {\n    return {\n      isLoggedIn: false,\n      isState: false,\n      userName: '',\n      isScrolled: false\n    };\n  },\n  computed: {\n    isRootPath() {\n      return this.$route.path === '/';\n    },\n    logoSrc() {\n      if (this.isRootPath) {\n        return this.isScrolled ? require('@/assets/logo.svg') : require('@/assets/logo2.svg');\n      } else {\n        return require('@/assets/logo.svg');\n      }\n    }\n  },\n  mounted() {\n    let loggedIn = sessionStorage.getItem(\"logg\");\n    let name = sessionStorage.getItem(\"name\");\n    this.isLoggedIn = loggedIn;\n    this.userName = name;\n    this.isState = false;\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    state() {\n      if (this.isState == false) {\n        this.isState = true;\n      } else {\n        this.isState = false;\n      }\n    },\n    logout() {\n      sessionStorage.clear();\n      this.isState = false;\n      window.location.href = '/';\n    },\n    user() {\n      this.isState = false;\n      window.location.href = \"/userpage\";\n    },\n    handleScroll() {\n      this.isScrolled = window.scrollY > 0;\n    }\n  }\n};","map":{"version":3,"names":["name","components","data","isLoggedIn","isState","userName","isScrolled","computed","isRootPath","$route","path","logoSrc","require","mounted","loggedIn","sessionStorage","getItem","window","addEventListener","handleScroll","beforeUnmount","removeEventListener","methods","state","logout","clear","location","href","user","scrollY"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <header :class=\"['header',{'scrolled': isScrolled && isRootPath, 'not-root': !isRootPath }]\" class=\"flex w-full fixed z-40 border-b\">\n      <nav class=\"navi w-full ml-[12.5%] gap-[18%] h-[81px]\">\n        <div class=\"flex items-center\">\n          <router-link to=\"/\">\n          <img :src=\"logoSrc\" class=\"w-[142px] h-auto\">\n          </router-link>\n        </div>\n        <div class=\"flex w-full items-center\">\n        <div class=\"navbar flex-1 flex gap-[20%] md:gap-[20%] sm:gap-[20%]\">\n          <router-link v-if=\"isLoggedIn\" to=\"/message\" @click=\"this.isState=false\" class=\"message text-[20px] sm:text-[10px] font-semibold\">메시지</router-link>\n          <button v-if=\"!isLoggedIn\" onclick=\"location.href='/login'\"  class=\"text-[20px] sm:text-[10px] font-semibold\">메시지</button>\n          <router-link v-if=\"isLoggedIn\" to=\"/credit\" @click=\"this.isState=false\" class=\"credit text-[20px] sm:text-[10px] font-semibold\">크레딧</router-link>\n          <button v-if=\"!isLoggedIn\" onclick=\"location.href='/login'\" class=\"text-[20px] sm:text-[10px] font-semibold\">크레딧</button>\n\n        </div>\n        <div class=\"flex-1 flex justify-end items-center gap-[10px] pr-[100px] md:pr-[50px] sm:pr-[50px]\">\n          <img src=\"@/assets/icon2/person.svg\" class=\"w-[50px] h-auto\">\n          <div v-if=\"isLoggedIn\" @click=\"state()\" class=\"text-[20px] mr-[45px] sm:text-[10px] font-semibold\">{{ userName }}님</div>\n          <div v-if=\"isState\" class=\"absolute border shoadow top-[80px] text-[20px] gap-[5px] px-[40px] py-[10px] \" style=\"background-color: #FFFFFF; color:black;\">\n            <div @click=\"user()\">회원 정보</div>\n            <div>--------</div>\n            <div @click=\"logout()\">로그아웃</div>\n          </div>\n          <router-link v-if=\"!isLoggedIn\" to=\"/login\" class=\"text-[20px] sm:text-[10px] font-semibold\">로그인</router-link>\n        </div>\n        </div>\n      </nav>\n    </header>\n    <router-view class=\"mt-[5rem]\"/>\n  </div>\n</template>\n\n\n<script>\n\nexport default {\n  name: 'App',\n  components: {\n\n  },\n  data(){\n    return{\n      isLoggedIn: false,\n      isState: false,\n      userName: '',\n      isScrolled: false,\n    };\n  },\n  computed: {\n    isRootPath() {\n      return this.$route.path === '/';\n    },\n    logoSrc() {\n      if(this.isRootPath){\n        return this.isScrolled ? require('@/assets/logo.svg') : require('@/assets/logo2.svg');\n      } else {\n        return require('@/assets/logo.svg');\n      }\n    },\n  },\n  mounted() {\n    let loggedIn = sessionStorage.getItem(\"logg\");\n    let name = sessionStorage.getItem(\"name\");\n    this.isLoggedIn = loggedIn;\n    this.userName = name;\n    this.isState = false;\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    state(){\n    if (this.isState == false) {\n        this.isState = true;\n    } else {\n        this.isState = false;\n    }\n    },\n    logout() {\n      sessionStorage.clear();\n      this.isState = false;\n      window.location.href ='/';\n      },\n    user(){\n      this.isState = false;\n      window.location.href=\"/userpage\";\n    },\n    handleScroll() {\n      this.isScrolled = window.scrollY > 0;\n    },\n  },\n};\n\n</script>\n\n<style>\n.navbar a.router-link-active {\n  position: relative; \n  color: blue;\n}\n\n.navbar a.router-link-active::after {\n  content: ''; \n  position: absolute; \n  left: -40px;\n  bottom: -25px; \n  width: 260%; \n  height: 3px; \n  background-color: blue;\n}\n\n.header {\n  transition: background-color 0.3s ease;\n  background-color: black;\n  color: white;\n}\n\n.header.scrolled {\n  background-color: white;\n  color: black;\n}\n\n.header.scrolled, .header.not-root {\n  background-color: white;\n  color: black;\n}\n@media (max-width: 768px) {\n  .navbar a.router-link-active::after {\n  content: ''; \n  position: absolute; \n  left: -20px;\n  bottom: -25px; \n  width: 180%; \n  height: 3px; \n  background-color: blue;\n}\n}\n\n@media (max-width: 480px) {\n  .navbar a.router-link-active::after {\n  content: ''; \n  position: absolute; \n  left: -20px;\n  bottom: -30px; \n  width: 200%; \n  height: 3px; \n  background-color: blue;\n}\n}\n</style>\n"],"mappings":"AAqCA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE,CAEZ,CAAC;EACDC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,UAAU,EAAE,KAAK;MACjBC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,MAAM,CAACC,IAAG,KAAM,GAAG;IACjC,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR,IAAG,IAAI,CAACH,UAAU,EAAC;QACjB,OAAO,IAAI,CAACF,UAAS,GAAIM,OAAO,CAAC,mBAAmB,IAAIA,OAAO,CAAC,oBAAoB,CAAC;MACvF,OAAO;QACL,OAAOA,OAAO,CAAC,mBAAmB,CAAC;MACrC;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIC,QAAO,GAAIC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIhB,IAAG,GAAIe,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAI,CAACb,UAAS,GAAIW,QAAQ;IAC1B,IAAI,CAACT,QAAO,GAAIL,IAAI;IACpB,IAAI,CAACI,OAAM,GAAI,KAAK;IACpBa,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,YAAY,CAAC;EACtD,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdH,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACF,YAAY,CAAC;EACzD,CAAC;EACDG,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAE;MACP,IAAI,IAAI,CAACnB,OAAM,IAAK,KAAK,EAAE;QACvB,IAAI,CAACA,OAAM,GAAI,IAAI;MACvB,OAAO;QACH,IAAI,CAACA,OAAM,GAAI,KAAK;MACxB;IACA,CAAC;IACDoB,MAAMA,CAAA,EAAG;MACPT,cAAc,CAACU,KAAK,CAAC,CAAC;MACtB,IAAI,CAACrB,OAAM,GAAI,KAAK;MACpBa,MAAM,CAACS,QAAQ,CAACC,IAAG,GAAG,GAAG;IACzB,CAAC;IACHC,IAAIA,CAAA,EAAE;MACJ,IAAI,CAACxB,OAAM,GAAI,KAAK;MACpBa,MAAM,CAACS,QAAQ,CAACC,IAAI,GAAC,WAAW;IAClC,CAAC;IACDR,YAAYA,CAAA,EAAG;MACb,IAAI,CAACb,UAAS,GAAIW,MAAM,CAACY,OAAM,GAAI,CAAC;IACtC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}