{"ast":null,"code":"export default {\n  name: 'App',\n  data() {\n    return {\n      isLoggedIn: false,\n      userName: ''\n    };\n  },\n  methods: {\n    setIsLoggedIn(newValue) {\n      this.isLoggedIn = newValue;\n      sessionStorage.setItem('logg', true); // 실제 로그인 상태 값을 저장\n      sessionStorage.setItem('name', this.userName); // 사용자 이름을 저장\n    },\n    logout() {\n      this.isLoggedIn = false;\n      this.userName = '';\n      sessionStorage.removeItem('logg'); // 로그아웃 시 loggedIn 키 제거\n      sessionStorage.removeItem('name'); // 로그아웃 시 name 키 제거\n    },\n    redirectToLogin(path) {\n      location.href = path; // 로그인 페이지로 이동\n    }\n  }\n};","map":{"version":3,"names":["name","data","isLoggedIn","userName","methods","setIsLoggedIn","newValue","sessionStorage","setItem","logout","removeItem","redirectToLogin","path","location","href"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <header class=\"flex w-full fixed z-40 border-b\" style=\"background-color:white\">\n      <nav class=\"navi w-full ml-[12.5%] gap-[18%] h-[81px]\">\n        <div class=\"flex items-center\">\n          <router-link to=\"/\">\n            <img src=\"./assets/logo.svg\" class=\"w-[142px] h-auto\">\n          </router-link>\n        </div>\n        <div class=\"flex w-full items-center\">\n          <div class=\"navbar flex-1 flex gap-[20%] md:gap-[20%] sm:gap-[20%]\">\n            <router-link v-if=\"isLoggedIn\" to=\"/message\" class=\"message text-[20px] sm:text-[14px] font-semibold\">메시지</router-link>\n            <button v-if=\"!isLoggedIn\" @click=\"redirectToLogin('/login')\" class=\"text-[20px] sm:text-[14px] font-semibold\">메시지</button>\n            <router-link v-if=\"isLoggedIn\" to=\"/credit\" class=\"credit text-[20px] sm:text-[14px] font-semibold\">크레딧</router-link>\n            <button v-if=\"!isLoggedIn\" @click=\"redirectToLogin('/login')\" class=\"text-[20px] sm:text-[14px] font-semibold\">크레딧</button>\n          </div>\n          <div class=\"flex-1 flex justify-end items-center gap-[10px] pr-[100px]\">\n            <div v-if=\"isLoggedIn\" class=\"text-[20px] sm:text-[14px] font-semibold\">{{ userName }}님</div>\n            <router-link v-if=\"!isLoggedIn\" to=\"/login\" class=\"text-[20px] sm:text-[14px] font-semibold\">로그인</router-link>\n            <router-link v-if=\"isLoggedIn\" to=\"/\" @click=\"logout\" class=\"text-[20px] sm:text-[14px] font-semibold\">로그아웃</router-link>\n          </div>\n        </div>\n      </nav>\n    </header>\n    <router-view :isLoggedIn=\"isLoggedIn\" @setIsLoggedIn=\"setIsLoggedIn\" class=\"mt-[5rem]\"/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      isLoggedIn: false,\n      userName: '',\n    };\n  },\n  methods: {\n    setIsLoggedIn(newValue) {\n      this.isLoggedIn = newValue;\n      sessionStorage.setItem('logg', true); // 실제 로그인 상태 값을 저장\n      sessionStorage.setItem('name', this.userName); // 사용자 이름을 저장\n    },\n    logout() {\n      this.isLoggedIn = false;\n      this.userName = '';\n      sessionStorage.removeItem('logg'); // 로그아웃 시 loggedIn 키 제거\n      sessionStorage.removeItem('name'); // 로그아웃 시 name 키 제거\n    },\n    redirectToLogin(path) {\n      location.href = path; // 로그인 페이지로 이동\n    }\n  },\n};\n</script>\n\n<style scoped>\n.navbar a.router-link-active {\n  position: relative; \n  color: blue;\n}\n\n.navbar a.router-link-active::after {\n  content: ''; \n  position: absolute; \n  left: -40px;\n  bottom: -25px; \n  width: 260%; \n  height: 3px; \n  background-color: blue;\n}\n\n@media (max-width: 768px) {\n  .navbar a.router-link-active::after {\n    content: ''; \n    position: absolute; \n    left: -20px;\n    bottom: -25px; \n    width: 180%; \n    height: 3px; \n    background-color: blue;\n  }\n}\n\n@media (max-width: 480px) {\n  .navbar a.router-link-active::after {\n    content: ''; \n    position: absolute; \n    left: -20px;\n    bottom: -30px; \n    width: 200%; \n    height: 3px; \n    background-color: blue;\n  }\n}\n</style>\n"],"mappings":"AA6BA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,QAAQ,EAAE;MACtB,IAAI,CAACJ,UAAS,GAAII,QAAQ;MAC1BC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;MACtCD,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAACL,QAAQ,CAAC,EAAE;IACjD,CAAC;IACDM,MAAMA,CAAA,EAAG;MACP,IAAI,CAACP,UAAS,GAAI,KAAK;MACvB,IAAI,CAACC,QAAO,GAAI,EAAE;MAClBI,cAAc,CAACG,UAAU,CAAC,MAAM,CAAC,EAAE;MACnCH,cAAc,CAACG,UAAU,CAAC,MAAM,CAAC,EAAE;IACrC,CAAC;IACDC,eAAeA,CAACC,IAAI,EAAE;MACpBC,QAAQ,CAACC,IAAG,GAAIF,IAAI,EAAE;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}