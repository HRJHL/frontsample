{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"coupon-box\"\n}, \" 5,000원 쿠폰 적용 \", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  ref: \"paymentMethod\"\n};\nconst _hoisted_3 = {\n  ref: \"agreement\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"coupon-box\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.applyCoupon && $options.applyCoupon(...args))\n  }, null, 32 /* NEED_HYDRATION */), _hoisted_1]), _createCommentVNode(\" 결제 UI \"), _createElementVNode(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */), _createCommentVNode(\" 이용약관 UI \"), _createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */), _createCommentVNode(\" 결제하기 버튼 \"), _createElementVNode(\"button\", {\n    class: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.processPayment && $options.processPayment(...args)),\n    style: {\n      \"margin-top\": \"30px\"\n    }\n  }, \"결제하기\")]);\n}","map":{"version":3,"names":["_createElementVNode","for","ref","_createElementBlock","type","id","onChange","_cache","args","$options","applyCoupon","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","class","onClick","processPayment","style"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/toss/TossCheck.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <input type=\"checkbox\" id=\"coupon-box\" @change=\"applyCoupon\" />\n      <label for=\"coupon-box\"> 5,000원 쿠폰 적용 </label>\n    </div>\n    <!-- 결제 UI -->\n    <div ref=\"paymentMethod\"></div>\n    <!-- 이용약관 UI -->\n    <div ref=\"agreement\"></div>\n    <!-- 결제하기 버튼 -->\n    <button class=\"button\" @click=\"processPayment\" style=\"margin-top: 30px\">결제하기</button>\n  </div>\n</template>\n\n<script>\nimport TossPayments from '@tosspayments/payment-sdk';\n\nexport default {\n  data() {\n    return {\n      couponApplied: false,\n      amount: 50000,\n      widgetClientKey: \"test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm\",\n      customerKey: \"1rNzb3iHa8gPgRkLABTcJ\",\n      tossPayments: null,\n      widgets: null,\n      paymentMethodWidget: null\n    };\n  },\n  mounted() {\n    this.initializeTossPayments();\n  },\n  methods: {\n    async initializeTossPayments() {\n      try {\n        this.tossPayments = TossPayments(this.widgetClientKey);\n        this.widgets = this.tossPayments.widgets({ customerKey: this.customerKey });\n\n        await this.widgets.setAmount({\n          currency: \"KRW\",\n          value: this.amount,\n        });\n\n        await Promise.all([\n          this.renderPaymentMethods(),\n          this.renderAgreement()\n        ]);\n      } catch (error) {\n        console.error('Error initializing Toss Payments:', error);\n      }\n    },\n    async renderPaymentMethods() {\n      try {\n        this.paymentMethodWidget = await this.widgets.renderPaymentMethods({\n          selector: \"#payment-method\",\n          variantKey: \"DEFAULT\",\n        });\n      } catch (error) {\n        console.error('Error rendering payment methods:', error);\n      }\n    },\n    async renderAgreement() {\n      try {\n        await this.widgets.renderAgreement({\n          selector: \"#agreement\",\n          variantKey: \"AGREEMENT\",\n        });\n      } catch (error) {\n        console.error('Error rendering agreement:', error);\n      }\n    },\n    async applyCoupon() {\n      try {\n        const updatedAmount = this.couponApplied ? this.amount : this.amount - 5000;\n\n        await this.widgets.setAmount({\n          currency: \"KRW\",\n          value: updatedAmount,\n        });\n\n        this.couponApplied = !this.couponApplied;\n      } catch (error) {\n        console.error('Error applying coupon:', error);\n      }\n    },\n    async processPayment() {\n      try {\n        await this.widgets.requestPayment({\n          orderId: \"zSpkmBCED-aslEKg0n72-\",\n          orderName: \"토스 티셔츠 외 2건\",\n          successUrl: window.location.origin + \"/success.html\",\n          failUrl: window.location.origin + \"/fail.html\",\n          customerEmail: \"customer123@gmail.com\",\n          customerName: \"김토스\",\n          customerMobilePhone: \"01012341234\",\n        });\n      } catch (error) {\n        console.error('Error processing payment:', error);\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";gCAIMA,mBAAA,CAA8C;EAAvCC,GAAG,EAAC;AAAY,GAAC,gBAAc;;EAGnCC,GAAG,EAAC;AAAe;;EAEnBA,GAAG,EAAC;AAAW;;uBARtBC,mBAAA,CAWM,cAVJH,mBAAA,CAGM,cAFJA,mBAAA,CAA+D;IAAxDI,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,YAAY;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;qCAC3DG,UAA8C,C,GAEhDC,mBAAA,WAAc,EACdZ,mBAAA,CAA+B,OAA/Ba,UAA+B,+BAC/BD,mBAAA,aAAgB,EAChBZ,mBAAA,CAA2B,OAA3Bc,UAA2B,+BAC3BF,mBAAA,aAAgB,EAChBZ,mBAAA,CAAqF;IAA7Ee,KAAK,EAAC,QAAQ;IAAEC,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAQ,cAAA,IAAAR,QAAA,CAAAQ,cAAA,IAAAT,IAAA,CAAc;IAAEU,KAAwB,EAAxB;MAAA;IAAA;KAAyB,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}