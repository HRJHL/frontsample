{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      users: [],\n      credits: [],\n      loading: true,\n      error: null,\n      name: '',\n      uname: '',\n      customerName: '',\n      uid: '',\n      upw: '',\n      uemail: '',\n      ucreate: '',\n      profile: ''\n    };\n  },\n  mounted() {\n    let name = sessionStorage.getItem(\"name\");\n    let email = sessionStorage.getItem(\"email\");\n    let profile = sessionStorage.getItem(\"profile\");\n    console.log(email);\n    this.name = name;\n    this.email = email;\n    if (profile == \"a\") {\n      this.profile = null;\n    } else {\n      this.profile = profile;\n    }\n    this.customerName = name;\n    this.fetchUsers();\n    this.fetchCredits();\n  },\n  computed: {\n    orderNamesCombined() {\n      return this.credits.map(credit => credit.order_name).join(', ');\n    },\n    sumOfExtractedNumbers() {\n      const extractNumbers = text => {\n        const numbers = text.match(/\\d+/g);\n        return numbers ? numbers.map(Number) : [];\n      };\n      const allNumbers = this.credits.flatMap(credit => extractNumbers(credit.order_name));\n      return allNumbers.reduce((sum, number) => sum + number, 0);\n    }\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/userinfo', {\n          email: this.email\n        });\n        console.log(response);\n        this.users = response.data.data;\n        this.uname = this.users.map(user => user.name).join(\",\");\n        this.uid = this.users.map(user => user.identity).join(\",\");\n        this.upw = \"******\";\n        this.uemail = this.users.map(user => user.email).join(\",\");\n        this.ucreate = this.users.map(user => user.created_at.substring(0, 10)).join(\",\");\n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information';\n        this.loading = false;\n      }\n    },\n    async fetchCredits() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/datab', {\n          customerName: this.customerName\n        });\n        this.credits = response.data.data;\n        this.loading = false;\n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information';\n        this.loading = false;\n      }\n    },\n    async remove() {\n      const confirmMessage = '정말로 탈퇴하시겠습니까?';\n      const userConfirmation = window.confirm(confirmMessage);\n      if (userConfirmation) {\n        const userInput = prompt('탈퇴하시려면 다음 글자를 따라 치세요: \"탈퇴합니다.\"');\n        if (userInput === '탈퇴합니다.') {\n          try {\n            const response = await axios.post('http://127.0.0.1:8000/remove', {\n              email: this.email\n            });\n            const user = response.data.data;\n            console.log(user);\n            alert('탈퇴되었습니다.');\n            sessionStorage.clear();\n            window.location.href = '/';\n          } catch (error) {\n            if (error.response) {\n              if (error.response.status === 404) {\n                this.errorMessage = '입력한 정보를 다시 확인해주세요.';\n              } else if (error.response.status === 422) {\n                this.errorMessage = '유효성 검사 오류: 입력한 정보를 다시 확인해주세요.';\n              } else {\n                this.errorMessage = '서버 에러가 발생했습니다. 나중에 다시 시도해주세요.';\n              }\n            } else {\n              this.errorMessage = '네트워크 오류 또는 서버가 응답하지 않습니다.';\n            }\n            console.error('탈퇴 요청 중 오류 발생:', error);\n          }\n        } else {\n          alert('입력한 글자가 맞지 않습니다. 탈퇴가 취소되었습니다.');\n        }\n      } else {\n        alert('탈퇴가 취소되었습니다.');\n      }\n    },\n    change() {\n      window.location.href = '/userpage2';\n    }\n  }\n};","map":{"version":3,"names":["axios","data","users","credits","loading","error","name","uname","customerName","uid","upw","uemail","ucreate","profile","mounted","sessionStorage","getItem","email","console","log","fetchUsers","fetchCredits","computed","orderNamesCombined","map","credit","order_name","join","sumOfExtractedNumbers","extractNumbers","text","numbers","match","Number","allNumbers","flatMap","reduce","sum","number","methods","response","post","user","identity","created_at","substring","message","remove","confirmMessage","userConfirmation","window","confirm","userInput","prompt","alert","clear","location","href","status","errorMessage","change"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/UserIn.vue"],"sourcesContent":["<template>\n<div class=\"w-full px-[30%] lg:px-[20%] md:px-[15%] sm:px-[5%] py-[10%]\" style=\"background-color:#FFFFF\">\n    <div class=\"flex justify-center text-[45px] md:text-[35px] sm:text-[25px] mb-[30px] font-bold\">회원님의 정보</div>\n    <div class=\"flex justify-start mb-[50px] md:mb-[30px] sm:mb-[20px]\">\n      <div class=\"px-[20px] py-[20px] rounded-[22px]\" style=\"background-color:#0000001A\">\n        <img :src=\"`http://127.0.0.1:8000/storage/${profile}`\" v-if=\"profile\" class=\"w-[100px] md:w-[80px] sm:w-[50px] h-auto\">\n        <img v-else src=\"@/assets/icon2/person.svg\" class=\"w-[100px] h-auto\" alt=\"Default Image\">\n      </div>\n      <div class=\"flex flex-col text-[22px] md:text-[16px] sm:text-[14px]\">\n        <div class=\"flex flex-row\">\n      <div class=\" font-semibold px-[20px] pt-[15px]\">결제 크레딧 :</div>\n      <div class=\" pt-[15px]\">{{ sumOfExtractedNumbers}},000 크레딧</div>\n        </div>\n        <div class=\"flex flex-row\">\n      <div class=\" font-semibold px-[20px] pt-[10px]\">보유 크레딧 :</div>\n      <div class=\" pt-[10px]\">{{ sumOfExtractedNumbers}},000 크레딧</div>\n        </div>\n        <div class=\"flex flex-row\">\n      <div class=\" font-semibold px-[20px] pt-[10px]\">사용 크레딧 :</div>\n      <div class=\" pt-[10px]\">0 크레딧</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"flex flex-row mb-[50px] md:mb-[30px] sm:mb-[20px] text-[32px] xl:text-[20px] lg:text-[18px] md:text-[14px] sm:text-[8px] border-t\" style=\"border-color:#0000002E\">\n      <div class=\"flex-col w-[220px] font-semibold\" style=\"background-color:#F0F0F0\">\n        <div class=\"flex px-[20px] py-[10px] border-b\" style=\"border-color:#0000002E\">이름</div>\n        <div class=\"flex px-[20px] py-[10px] border-b\" style=\"border-color:#0000002E\">아이디</div>\n        <div class=\"flex px-[20px] py-[10px] border-b\" style=\"border-color:#0000002E\">비밀번호</div>\n        <div class=\"flex px-[20px] py-[10px] border-b\" style=\"border-color:#0000002E\">이메일</div>\n        <div class=\"flex px-[20px] py-[10px] border-b\" style=\"border-color:#0000002E\">가입날짜</div>\n      </div>\n      <div class=\"flex-auto flex-col\">\n        <div class=\"flex px-[20px] py-[10px] border-b \" style=\"border-color:#0000002E\">{{uname}}</div>\n        <div class=\"flex px-[20px] py-[10px] border-b \" style=\"border-color:#0000002E\">{{uid}}</div>\n        <div class=\"flex px-[20px] py-[10px] border-b \" style=\"border-color:#0000002E\">{{upw}}</div>\n        <div class=\"flex px-[20px] py-[10px] border-b \" style=\"border-color:#0000002E\">{{uemail}}</div>\n        <div class=\"flex px-[20px] py-[10px] border-b \" style=\"border-color:#0000002E\">{{ucreate}}</div>\n      </div>\n  </div>\n  <div class=\"flex flex-row justify-center gap-[40px]\">\n    <button @click=\"change()\" class=\"text-[20px] sm:text-[14px] px-[20px] py-[20px] sm:py-[10px] font-semibold rounded-[8px]\" style=\"background-color:#4E81FF; color:#FFFFFF\">정보 변경</button>\n    <button @click=\"remove()\" class=\"text-[20px] sm:text-[14px] px-[20px] py-[20px] sm:py-[10px] font-semibold rounded-[8px]\" style=\"background-color:#4E81FF; color:#FFFFFF\">회원 탈퇴</button>\n  </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      users: [],\n      credits: [],\n      loading: true,\n      error: null,\n      name: '',\n      uname: '',\n      customerName: '',\n      uid: '',\n      upw: '',\n      uemail: '',\n      ucreate: '',\n      profile: '',\n    };\n  },\n  mounted() {\n    let name = sessionStorage.getItem(\"name\");\n    let email = sessionStorage.getItem(\"email\");\n    let profile = sessionStorage.getItem(\"profile\");\n    console.log(email);\n    this.name = name;\n    this.email = email;\n    if(profile==\"a\"){\n      this.profile = null;\n    }else{\n      this.profile = profile;\n      }\n    this.customerName = name;\n    this.fetchUsers();\n    this.fetchCredits();\n  },\n  computed: {\n    orderNamesCombined() {\n    return this.credits.map(credit => credit.order_name).join(', ');\n  },\n  sumOfExtractedNumbers() {\n    const extractNumbers = (text) => {\n      const numbers = text.match(/\\d+/g);\n      return numbers ? numbers.map(Number) : [];\n    };\n\n    const allNumbers = this.credits.flatMap(credit => extractNumbers(credit.order_name));\n    return allNumbers.reduce((sum, number) => sum + number, 0);\n    },\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/userinfo', {\n          email: this.email,\n        });\n        console.log(response);\n        this.users = response.data.data;\n        this.uname = this.users.map(user=> user.name).join(\",\");\n        this.uid = this.users.map(user=> user.identity).join(\",\");\n        this.upw = \"******\";\n        this.uemail = this.users.map(user=> user.email).join(\",\");\n        this.ucreate = this.users.map(user=> user.created_at.substring(0, 10)).join(\",\");\n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information'; \n        this.loading = false;\n      }\n    },\n    async fetchCredits() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/datab', {\n          customerName: this.customerName,\n        });\n        this.credits = response.data.data;\n        this.loading = false; \n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information'; \n        this.loading = false;\n      }\n    },\n    async remove() {\n    const confirmMessage = '정말로 탈퇴하시겠습니까?';\n    const userConfirmation = window.confirm(confirmMessage);\n\n    if (userConfirmation) {\n      const userInput = prompt('탈퇴하시려면 다음 글자를 따라 치세요: \"탈퇴합니다.\"');\n\n      if (userInput === '탈퇴합니다.') {\n        try {\n          const response = await axios.post('http://127.0.0.1:8000/remove', {\n            email: this.email,\n          });\n\n          const user = response.data.data;\n          console.log(user);\n\n          alert('탈퇴되었습니다.');\n\n          sessionStorage.clear();\n          window.location.href = '/';\n        } catch (error) {\n          if (error.response) {\n            if (error.response.status === 404) {\n              this.errorMessage = '입력한 정보를 다시 확인해주세요.';\n            } else if (error.response.status === 422) {\n              this.errorMessage = '유효성 검사 오류: 입력한 정보를 다시 확인해주세요.';\n            } else {\n              this.errorMessage = '서버 에러가 발생했습니다. 나중에 다시 시도해주세요.';\n            }\n          } else {\n            this.errorMessage = '네트워크 오류 또는 서버가 응답하지 않습니다.';\n          }\n\n          console.error('탈퇴 요청 중 오류 발생:', error);\n        }\n      } else {\n        alert('입력한 글자가 맞지 않습니다. 탈퇴가 취소되었습니다.');\n      }\n    } else {\n      alert('탈퇴가 취소되었습니다.');\n    }\n  },\n    change(){\n      window.location.href='/userpage2';\n    }\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}