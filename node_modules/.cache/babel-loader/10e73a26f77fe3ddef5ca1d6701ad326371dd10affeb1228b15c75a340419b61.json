{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/sendgo/logo.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-8b577b2e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"w-full px-[30%] py-[10%]\",\n  style: {\n    \"background-color\": \"#FFFFF\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"flex w-full flex-col items-center justify-center\"\n}, [/*#__PURE__*/_createCommentVNode(\" 배너 이미지 \"), /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  class: \"w-[300px] lg:w-[250px] md:w-[200px] sm:w-[150px] h-auto mb-[80px] lg:mb-[60px] md:mb-[50px] sm:mb-[40px]\"\n})], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"flex flex-col mb-[20px] sm:mb-[10px] items-start gap-[20px] sm:gap-[10px]\"\n};\nconst _hoisted_4 = {\n  class: \"flex flex-row justify-end gap-[10px] mb-[20px]\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-[15px]\"\n}, \"|\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"flex justify-center rounded-[8px] mb-[30px] sm:mb-[20px]\\\" style=\\\"background-color:#4F44F0;\\\" data-v-8b577b2e><button type=\\\"submit\\\" class=\\\"font-semibold px-[20px] py-[15px] sm:text-[14px] sm:py-[10px]\\\" style=\\\"color:#FFFFFF;\\\" data-v-8b577b2e>로그인</button></div><div class=\\\"flex justify-start rounded-[8px] mb-[30px] sm:mb-[20px]\\\" data-v-8b577b2e><div id=\\\"kakao-login-button\\\" data-v-8b577b2e></div></div><div class=\\\"flex justify-start rounded-[8px] mb-[30px] sm:mb-[20px]\\\" data-v-8b577b2e><div id=\\\"google-login-button\\\" data-v-8b577b2e>rㄴda</div></div>\", 3);\nconst _hoisted_9 = {\n  class: \"flex justify-center sm:text-[10px]\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 로그인 폼 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.identity = $event),\n    placeholder: \"아이디\",\n    class: \"text-[20px] sm:text-[14px] w-full pl-[10px] py-[5px] rounded-[8px]\",\n    style: {\n      \"border\": \"1px solid #CECECE\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.identity]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"비밀번호\",\n    class: \"text-[20px] sm:text-[14px] w-full pl-[10px] py-[5px] rounded-[8px]\",\n    style: {\n      \"border\": \"1px solid #CECECE\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createCommentVNode(\" 아이디 비번 찾기 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.Sid()),\n    class: \"text-[15px]\"\n  }, \"아이디 찾기\"), _hoisted_5, _createElementVNode(\"div\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.Spw()),\n    class: \"text-[15px]\"\n  }, \"비밀번호 찾기\")]), _hoisted_6, _createElementVNode(\"div\", _hoisted_9, [_createTextVNode(\" 계정이 없으신가요? \"), _createVNode(_component_router_link, {\n    to: \"/register\",\n    class: \"font-semibold border-b\",\n    style: {\n      \"color\": \"#4F44F0\",\n      \"border-color\": \"#4F44F0\"\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"회원가입하기\")]),\n    _: 1 /* STABLE */\n  })])], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_imports_0","class","style","_createElementVNode","_createCommentVNode","src","_createStaticVNode","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","login","_hoisted_2","_hoisted_3","type","$event","$data","identity","placeholder","password","_hoisted_4","onClick","Sid","_hoisted_5","Spw","_hoisted_6","_hoisted_9","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/LoginFrom.vue"],"sourcesContent":["<template>\n  <div class=\"w-full px-[30%] py-[10%]\" style=\"background-color:#FFFFF\">\n    <form @submit.prevent=\"login\">\n      <div class=\"flex w-full flex-col items-center justify-center\">\n        <!-- 배너 이미지 -->\n        <img src=\"@/assets/sendgo/logo.svg\" class=\"w-[300px] lg:w-[250px] md:w-[200px] sm:w-[150px] h-auto mb-[80px] lg:mb-[60px] md:mb-[50px] sm:mb-[40px]\">\n      </div>\n      <div class=\"flex flex-col mb-[20px] sm:mb-[10px] items-start gap-[20px] sm:gap-[10px]\">\n        <!-- 로그인 폼 -->\n        <input type=\"text\" v-model=\"identity\" placeholder=\"아이디\" class=\"text-[20px] sm:text-[14px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\">\n        <input type=\"password\" v-model=\"password\" placeholder=\"비밀번호\" class=\"text-[20px] sm:text-[14px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\">\n      </div>\n      <!-- 아이디 비번 찾기 -->\n      <div class=\"flex flex-row justify-end gap-[10px] mb-[20px]\">\n        <div @click=\"Sid()\" class=\"text-[15px]\">아이디 찾기</div>\n        <div class=\"text-[15px]\">|</div>\n        <div @click=\"Spw()\" class=\"text-[15px]\">비밀번호 찾기</div>\n      </div>\n      <div class=\"flex justify-center rounded-[8px] mb-[30px] sm:mb-[20px]\" style=\"background-color:#4F44F0;\">\n        <button type=\"submit\" class=\"font-semibold px-[20px] py-[15px] sm:text-[14px] sm:py-[10px]\" style=\"color:#FFFFFF\">로그인</button>\n      </div>\n      <div class=\"flex justify-start rounded-[8px] mb-[30px] sm:mb-[20px]\">\n        <div id=\"kakao-login-button\"></div>\n      </div>\n      <div class=\"flex justify-start rounded-[8px] mb-[30px] sm:mb-[20px]\">\n        <div id=\"google-login-button\">rㄴda</div>\n      </div>\n      <div class=\"flex justify-center sm:text-[10px]\">\n        계정이 없으신가요?&nbsp;<router-link to=\"/register\" class=\"font-semibold border-b\" style=\"color:#4F44F0; border-color:#4F44F0;\">회원가입하기</router-link>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      identity: '',\n      password: '',\n      name: '',\n    };\n  },\n  mounted() {\n    if (!window.Kakao.isInitialized()) {\n      window.Kakao.init('8a670c965eb7e112ae1be878b9ce90b9'); // 카카오 JavaScript 키 입력\n    }\n\n    window.Kakao.Auth.createLoginButton({\n      container: '#kakao-login-button',\n      success: (authObj) => {\n        this.handleKakaoLoginSuccess(authObj);\n      },\n      fail: (err) => {\n        console.error(err);\n      }\n    });\n\n    this.initGoogleLogin();\n  },\n  methods: {\n    login() {\n      axios.post('http://127.0.0.1:8000/login', {\n        identity: this.identity,\n        password: this.password,\n        name: this.name,\n      })\n      .then(response => {\n        const userName = response.data.user.name;\n        const useremail = response.data.user.email;\n        let userprofile = response.data.user.profile_image || 'a';\n        sessionStorage.setItem(\"logg\", true);\n        sessionStorage.setItem('name', userName);\n        sessionStorage.setItem('email', useremail);\n        sessionStorage.setItem('profile', userprofile);\n        window.location.href ='/message';\n      })\n      .catch(error => {\n        console.error(error);\n        alert(\"아이디 혹은 비밀번호가 틀렸습니다.\");\n      });\n    },\n    Sid() {\n      location.href='/searchL';\n    },\n    Spw() {\n      location.href='/searchP';\n    },\n    async handleKakaoLoginSuccess(authObj) {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/auth/kakao', {\n          access_token: authObj.access_token\n        });\n        const userName = response.data.user.name;\n        const useremail = response.data.user.email;\n        let userprofile = response.data.user.profile_image || 'a';\n        sessionStorage.setItem(\"logg\", true);\n        sessionStorage.setItem('name', userName);\n        sessionStorage.setItem('email', useremail);\n        sessionStorage.setItem('profile', userprofile);\n        window.location.href ='/message';\n        console.log(response);\n      } catch (error) {\n        console.error('Kakao login error:', error);\n        alert(\"로그인에 실패했습니다.\");\n      }\n    },\n    initGoogleLogin() {\n      window.gapi.load('auth2', () => {\n        window.gapi.auth2.init({\n          client_id: '741549460694-2450692ecqr3jr3msq0tvvocrqgrb35f.apps.googleusercontent.com', // 구글 클라이언트 ID 입력\n        }).then(() => {\n          window.gapi.signin2.render('google-login-button', {\n            scope: 'profile email',\n            width: 240,\n            height: 50,\n            longtitle: true,\n            theme: 'dark',\n            onsuccess: this.handleGoogleLoginSuccess,\n            onfailure: (error) => console.error('Google login error:', error),\n          });\n        });\n      });\n    },\n    handleGoogleLoginSuccess(googleUser) {\n      const id_token = googleUser.getAuthResponse().id_token;\n\n      axios.post('http://127.0.0.1:8000/auth/google', {\n        id_token\n      })\n      .then(response => {\n        const userName = response.data.user.name;\n        const useremail = response.data.user.email;\n        let userprofile = response.data.user.profile_image || 'a';\n        sessionStorage.setItem(\"logg\", true);\n        sessionStorage.setItem('name', userName);\n        sessionStorage.setItem('email', useremail);\n        sessionStorage.setItem('profile', userprofile);\n        window.location.href ='/message';\n      })\n      .catch(error => {\n        console.error('Google login error:', error);\n        alert(\"로그인에 실패했습니다.\");\n      });\n    },\n  }\n};\n</script>\n\n<style scoped>\n/* 스타일 추가 */\n</style>"],"mappings":";OAKaA,UAA8B;;;EAJpCC,KAAK,EAAC,0BAA0B;EAACC,KAA+B,EAA/B;IAAA;EAAA;;gEAElCC,mBAAA,CAGM;EAHDF,KAAK,EAAC;AAAkD,I,aAC3DG,mBAAA,YAAe,E,aACfD,mBAAA,CAAqJ;EAAhJE,GAA8B,EAA9BL,UAA8B;EAACC,KAAK,EAAC;;;EAEvCA,KAAK,EAAC;AAA2E;;EAMjFA,KAAK,EAAC;AAAgD;gEAEzDE,mBAAA,CAAgC;EAA3BF,KAAK,EAAC;AAAa,GAAC,GAAC;gCAflCK,kBAAA;;EA2BWL,KAAK,EAAC;AAAoC;;;uBA1BnDM,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJL,mBAAA,CA4BO;IA5BAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFjBC,cAAA,KAAAC,IAAA,KAE2BC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;MAC1BG,UAGM,EACNZ,mBAAA,CAIM,OAJNa,UAIM,GAHJZ,mBAAA,WAAc,E,gBACdD,mBAAA,CAAsK;IAA/Jc,IAAI,EAAC,MAAM;IAT1B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IASoCC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,WAAW,EAAC,KAAK;IAACpB,KAAK,EAAC,oEAAoE;IAACC,KAAkC,EAAlC;MAAA;IAAA;iDAAvGiB,KAAA,CAAAC,QAAQ,E,mBACpCjB,mBAAA,CAA2K;IAApKc,IAAI,EAAC,UAAU;IAV9B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAUwCC,KAAA,CAAAG,QAAQ,GAAAJ,MAAA;IAAEG,WAAW,EAAC,MAAM;IAACpB,KAAK,EAAC,oEAAoE;IAACC,KAAkC,EAAlC;MAAA;IAAA;iDAAxGiB,KAAA,CAAAG,QAAQ,E,KAE1ClB,mBAAA,eAAkB,EAClBD,mBAAA,CAIM,OAJNoB,UAIM,GAHJpB,mBAAA,CAAoD;IAA9CqB,OAAK,EAAAd,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAAEL,QAAA,CAAAY,GAAG;IAAIxB,KAAK,EAAC;KAAc,QAAM,GAC9CyB,UAAgC,EAChCvB,mBAAA,CAAqD;IAA/CqB,OAAK,EAAAd,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAAEL,QAAA,CAAAc,GAAG;IAAI1B,KAAK,EAAC;KAAc,SAAO,E,GAEjD2B,UAEM,EAONzB,mBAAA,CAEM,OAFN0B,UAEM,GA7BZC,gBAAA,CA2BsD,cAC9B,GAAAC,YAAA,CAA4HC,sBAAA;IAA/GC,EAAE,EAAC,WAAW;IAAChC,KAAK,EAAC,wBAAwB;IAACC,KAA4C,EAA5C;MAAA;MAAA;IAAA;;IA5BnFgC,OAAA,EAAAC,QAAA,CA4BgI,MAAM,CA5BtIL,gBAAA,CA4BgI,QAAM,E;IA5BtIM,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}