{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      email: '',\n      name: '',\n      errorMessage: '',\n      isSearch: false,\n      identity: '',\n      isrun: false\n    };\n  },\n  methods: {\n    findId() {\n      this.isrun = true;\n      axios.post('http://127.0.0.1:8000/searchL', {\n        name: this.name,\n        email: this.email\n      }).then(response => {\n        const userid = response.data.data.identity;\n        console.log(userid);\n        this.identity = userid;\n        this.isSearch = true;\n      }).catch(error => {\n        if (error.response && error.response.status === 404) {\n          this.errorMessage = '입력한 정보를 다시 확인해주세요.';\n        } else if (error.response && error.response.status === 422) {\n          this.errorMessage = '유효성 검사 오류: 입력한 정보를 다시 확인해주세요.';\n        } else {\n          this.errorMessage = '서버 에러가 발생했습니다. 나중에 다시 시도해주세요.';\n        }\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","name","errorMessage","isSearch","identity","isrun","methods","findId","post","then","response","userid","console","log","catch","error","status"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/SearchID.vue"],"sourcesContent":["<template>\n  <div class=\"w-full px-[30%] py-[10%]\" style=\"background-color:#FFFFF\">\n    <form @submit.prevent=\"findId\">\n      <div class=\"flex w-full flex-col items-center justify-center\">\n        <!-- 배너 이미지-->\n        <img src=\"@/assets/sendgo/logo.svg\" class=\"w-[300px] lg:w-[250px] md:w-[200px] sm:w-[150px] h-auto mb-[80px] lg:mb-[60px] md:mb-[50px] sm:mb-[40px]\">\n      </div>\n      <div v-if=\"!isSearch && isrun\" class=\"flex justify-center\">\n      <img src=\"@/assets/sendgo/images.png\" class=\"w-[30px] h-auto rotate-img\">\n    </div>\n      <div class=\"text-[20px] font-bold mb-[10px]\">\n        아이디 찾기\n      </div>\n      <div v-if=\"!isSearch\">\n      <div class=\"flex flex-col mb-[20px] sm:mb-[10px] items-start gap-[20px] sm:gap-[10px]\">\n        <input type=\"text\" v-model=\"name\" placeholder=\"이름\" class=\"text-[20px] sm:text-[14px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\">\n        <input type=\"email\" v-model=\"email\" placeholder=\"이메일\" class=\"text-[20px] sm:text-[14px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\">\n      </div>\n      <div class=\"flex justify-center rounded-[8px] mb-[30px] sm:mb-[20px]\" style=\"background-color:#4F44F0;\">\n        <button type=\"submit\" class=\"font-semibold px-[20px] py-[15px] sm:text-[14px] sm:py-[10px]\" style=\"color:#FFFFFF\">아이디 찾기</button>\n      </div>\n      </div>\n      <div v-if=\"isSearch\" class=\"felx border py-[30px] mb-[20px]\" style=\"border-color: #5C5C5C; background-color: #E0E0E0\">\n        <div class=\"text-[25px] flex justify-center items-center\">아이디는 : '{{ identity }}' 입니다</div>\n      </div>\n      <div class=\"flex justify-center sm:text-[10px]\">\n        계정이 없으신가요?&nbsp;<router-link to=\"/register\" class=\"font-semibold border-b\" style=\"color:#4F44F0; border-color:#4F44F0;\">회원가입하기</router-link>\n      </div>\n    </form>\n    <div v-if=\"errorMessage\" class=\"text-red-500\">\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      email: '',\n      name: '',\n      errorMessage: '',\n      isSearch : false,\n      identity : '',\n      isrun : false,\n    };\n  },\n  methods: {\n    findId() {\n      this.isrun = true;\n      axios.post('http://127.0.0.1:8000/searchL', {\n        name: this.name,\n        email: this.email,\n      })\n      .then(response => {\n        const userid = response.data.data.identity;\n        console.log(userid);\n        this.identity = userid;\n        this.isSearch = true;\n      })\n      .catch(error => {\n        if (error.response && error.response.status === 404) {\n          this.errorMessage = '입력한 정보를 다시 확인해주세요.';\n        } else if (error.response && error.response.status === 422) {\n          this.errorMessage = '유효성 검사 오류: 입력한 정보를 다시 확인해주세요.';\n        } else {\n          this.errorMessage = '서버 에러가 발생했습니다. 나중에 다시 시도해주세요.';\n        }\n        console.error(error);\n      });\n    }\n  }\n};\n</script>\n"],"mappings":"AAoCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,YAAY,EAAE,EAAE;MAChBC,QAAO,EAAI,KAAK;MAChBC,QAAO,EAAI,EAAE;MACbC,KAAI,EAAI;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACF,KAAI,GAAI,IAAI;MACjBP,KAAK,CAACU,IAAI,CAAC,+BAA+B,EAAE;QAC1CP,IAAI,EAAE,IAAI,CAACA,IAAI;QACfD,KAAK,EAAE,IAAI,CAACA;MACd,CAAC,EACAS,IAAI,CAACC,QAAO,IAAK;QAChB,MAAMC,MAAK,GAAID,QAAQ,CAACX,IAAI,CAACA,IAAI,CAACK,QAAQ;QAC1CQ,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACnB,IAAI,CAACP,QAAO,GAAIO,MAAM;QACtB,IAAI,CAACR,QAAO,GAAI,IAAI;MACtB,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACL,QAAO,IAAKK,KAAK,CAACL,QAAQ,CAACM,MAAK,KAAM,GAAG,EAAE;UACnD,IAAI,CAACd,YAAW,GAAI,oBAAoB;QAC1C,OAAO,IAAIa,KAAK,CAACL,QAAO,IAAKK,KAAK,CAACL,QAAQ,CAACM,MAAK,KAAM,GAAG,EAAE;UAC1D,IAAI,CAACd,YAAW,GAAI,+BAA+B;QACrD,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,+BAA+B;QACrD;QACAU,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}