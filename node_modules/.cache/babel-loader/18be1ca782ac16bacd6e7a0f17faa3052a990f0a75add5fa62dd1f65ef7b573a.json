{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"box_section\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"payment-method\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"agreement\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = {\n  style: {\n    \"padding-left\": \"25px\"\n  }\n};\nconst _hoisted_6 = {\n  class: \"checkable typography--p\"\n};\nconst _hoisted_7 = {\n  for: \"coupon-box\",\n  class: \"checkable__label typography--regular\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"checkable__label-text\"\n}, \"5,000원 쿠폰 적용\", -1 /* HOISTED */);\nconst _hoisted_10 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 결제 UI \"), _hoisted_3, _createCommentVNode(\" 이용약관 UI \"), _hoisted_4, _createCommentVNode(\" 쿠폰 체크박스 \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"label\", _hoisted_7, [_createElementVNode(\"input\", {\n    disabled: !$data.inputEnabled,\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.updateAmount && $options.updateAmount(...args)),\n    id: \"coupon-box\",\n    class: \"checkable__input\",\n    type: \"checkbox\",\n    \"aria-checked\": \"true\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_8), _hoisted_9])])]), _createCommentVNode(\" 결제하기 버튼 \"), _createElementVNode(\"button\", {\n    disabled: !$data.inputEnabled,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.requestPayment && $options.requestPayment(...args)),\n    class: \"button\",\n    id: \"payment-button\",\n    style: {\n      \"margin-top\": \"30px\"\n    }\n  }, \"결제하기\", 8 /* PROPS */, _hoisted_10)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","style","for","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","disabled","$data","inputEnabled","onChange","_cache","args","$options","updateAmount","type","_hoisted_8","_hoisted_9","onClick","requestPayment","_hoisted_10"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/toss/TossCheck.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"box_section\">\n      <!-- 결제 UI -->\n      <div id=\"payment-method\"></div>\n      <!-- 이용약관 UI -->\n      <div id=\"agreement\"></div>\n      <!-- 쿠폰 체크박스 -->\n      <div style=\"padding-left: 25px\">\n        <div class=\"checkable typography--p\">\n          <label for=\"coupon-box\" class=\"checkable__label typography--regular\">\n            <input :disabled=\"!inputEnabled\" @change=\"updateAmount\" id=\"coupon-box\" class=\"checkable__input\" type=\"checkbox\" aria-checked=\"true\" /><span class=\"checkable__label-text\"\n              >5,000원 쿠폰 적용</span\n            >\n          </label>\n        </div>\n      </div>\n      <!-- 결제하기 버튼 -->\n      <button :disabled=\"!inputEnabled\" @click=\"requestPayment\" class=\"button\" id=\"payment-button\" style=\"margin-top: 30px\">결제하기</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { loadPaymentWidget, ANONYMOUS } from \"@tosspayments/payment-widget-sdk\";\nimport { nanoid } from \"nanoid\";\n\nexport default {\n  data() {\n    return {\n      paymentWidget: null,\n      paymentMethodWidget: null,\n      // TODO: clientKey는 개발자센터의 결제위젯 연동 키 > 클라이언트 키로 바꾸세요.\n      // TODO: customerKey는 구매자와 1:1 관계로 무작위한 고유값을 생성하세요.\n      clientKey: \"test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm\",\n      customerKey: nanoid(),\n      amount: 50000,\n      inputEnabled: false,\n    };\n  },\n  methods: {\n    async requestPayment() {\n      try {\n        if (this.paymentWidget) {\n          // ------ '결제하기' 버튼 누르면 결제창 띄우기 ------\n          // 결제를 요청하기 전에 orderId, amount를 서버에 저장하세요.\n          // 결제 과정에서 악의적으로 결제 금액이 바뀌는 것을 확인하는 용도입니다.\n          // @docs https://docs.tosspayments.com/reference/widget-sdk#requestpayment결제-정보\n          await this.paymentWidget.requestPayment({\n            orderId: nanoid(),\n            orderName: \"토스 티셔츠 외 2건\",\n            customerName: \"김토스\",\n            customerEmail: \"customer123@gmail.com\",\n            customerMobilePhone: \"01012341234\",\n            successUrl: `${window.location.origin}/success`,\n            failUrl: `${window.location.origin}/fail`,\n          });\n        }\n      } catch (error) {\n        // 에러 처리하기\n        console.error(error);\n      }\n    },\n    async updateAmount() {\n      const coupon = document.getElementById(\"coupon-box\");\n      // ------  결제 금액 업데이트 ------\n      // @docs https://docs.tosspayments.com/reference/widget-sdk#updateamount결제-금액\n      if (coupon.checked) {\n        this.paymentMethodWidget.updateAmount(this.amount - 5000);\n      } else {\n        this.paymentMethodWidget.updateAmount(this.amount);\n      }\n    },\n  },\n  async mounted() {\n    // ------  결제위젯 초기화 ------\n    // @docs https://docs.tosspayments.com/reference/widget-sdk#sdk-설치-및-초기화\n    this.paymentWidget = await loadPaymentWidget(this.clientKey, ANONYMOUS);\n\n    // ------  결제 UI 렌더링 ------\n    // @docs https://docs.tosspayments.com/reference/widget-sdk#renderpaymentmethods선택자-결제-금액-옵션\n    this.paymentMethodWidget = this.paymentWidget.renderPaymentMethods(\"#payment-method\", { value: this.amount }, { variantKey: \"DEFAULT\" });\n    // ------  이용약관 UI 렌더링 ------\n    // @docs https://docs.tosspayments.com/reference/widget-sdk#renderagreement선택자-옵션\n    this.paymentWidget.renderAgreement(\"#agreement\", { variantKey: \"AGREEMENT\" });\n\n    this.paymentMethodWidget.on(\"ready\", () => {\n      this.inputEnabled = true;\n    });\n  },\n};\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAa;gCAEtBC,mBAAA,CAA+B;EAA1BC,EAAE,EAAC;AAAgB;gCAExBD,mBAAA,CAA0B;EAArBC,EAAE,EAAC;AAAW;;EAEdC,KAA0B,EAA1B;IAAA;EAAA;AAA0B;;EACxBH,KAAK,EAAC;AAAyB;;EAC3BI,GAAG,EAAC,YAAY;EAACJ,KAAK,EAAC;;mBAVxC;gCAWmJC,mBAAA,CAEtI;EAF4ID,KAAK,EAAC;AAAuB,GACvK,cAAY;oBAZ3B;;uBACEK,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJL,mBAAA,CAiBM,OAjBNM,UAiBM,GAhBJC,mBAAA,WAAc,EACdC,UAA+B,EAC/BD,mBAAA,aAAgB,EAChBE,UAA0B,EAC1BF,mBAAA,aAAgB,EAChBP,mBAAA,CAQM,OARNU,UAQM,GAPJV,mBAAA,CAMM,OANNW,UAMM,GALJX,mBAAA,CAIQ,SAJRY,UAIQ,GAHNZ,mBAAA,CAAuI;IAA/Ha,QAAQ,GAAGC,KAAA,CAAAC,YAAY;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEjB,EAAE,EAAC,YAAY;IAACF,KAAK,EAAC,kBAAkB;IAACsB,IAAI,EAAC,UAAU;IAAC,cAAY,EAAC;2CAX1IC,UAAA,GAWmJC,UAEtI,C,OAIPhB,mBAAA,aAAgB,EAChBP,mBAAA,CAAmI;IAA1Ha,QAAQ,GAAGC,KAAA,CAAAC,YAAY;IAAGS,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAM,cAAA,IAAAN,QAAA,CAAAM,cAAA,IAAAP,IAAA,CAAc;IAAEnB,KAAK,EAAC,QAAQ;IAACE,EAAE,EAAC,gBAAgB;IAACC,KAAwB,EAAxB;MAAA;IAAA;KAAyB,MAAI,iBAlBhIwB,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}