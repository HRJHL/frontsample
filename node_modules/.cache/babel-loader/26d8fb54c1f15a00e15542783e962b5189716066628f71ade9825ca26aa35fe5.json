{"ast":null,"code":"export default {\n  name: 'AppHeader',\n  props: ['isLoggedIn'],\n  methods: {\n    setIsLoggedIn(value) {\n      this.$emit('setIsLoggedIn', value); // 로그인 상태 변경 이벤트를 부모 컴포넌트로 전달\n    },\n    logout() {\n      // 로그아웃 로직을 구현합니다.\n      // 여기에서는 단순히 로그인 상태를 false로 설정하여 예시를 보여줍니다.\n      this.setIsLoggedIn(false); // 로그아웃 상태로 변경\n      // 로그아웃 후에 추가적인 처리가 필요하다면 여기에 추가하세요.\n    }\n  }\n};","map":{"version":3,"names":["name","props","methods","setIsLoggedIn","value","$emit","logout"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/layout/AppHeader.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <header class=\"flex w-full absolute z-40 mt-[-5rem] border-b\" style=\"background-color:black; color:white\">\n      <nav class=\"navi w-full ml-[12.5%] gap-[18%] h-[81px]\">\n        <div class=\"flex items-center\">\n          <router-link to=\"/\">\n          <img src=\"@/assets/logo2.svg\" class=\"w-[142px] h-auto\"/>\n          </router-link>\n        </div>\n        <div class=\"flex w-full items-center\">\n        <div class=\"navbar flex-1 flex gap-[20%] md:gap-[20%] sm:gap-[20%]\">\n          <router-link v-if=\"isLoggedIn\" to=\"/message\" class=\"message text-[20px] sm:text-[14px] font-semibold\">메시지</router-link>\n          <button v-if=\"!isLoggedIn\" onclick=\"location.href='/login'\" class=\"text-[20px] sm:text-[14px] font-semibold\">메시지</button>\n          <router-link v-if=\"isLoggedIn\" to=\"/credit\" class=\"credit text-[20px] sm:text-[14px] font-semibold\">크레딧</router-link>\n          <button v-if=\"!isLoggedIn\" onclick=\"location.href='/login'\" class=\"text-[20px] sm:text-[14px] font-semibold\">크레딧</button>\n\n        </div>\n        <div class=\"flex-1 flex justify-end pr-[100px]\">\n\n          <router-link v-if=\"!isLoggedIn\" to=\"/login\" class=\"text-[20px] sm:text-[14px] font-semibold\">로그인</router-link>\n          <router-link v-if=\"isLoggedIn\" to=\"/\" @click=\"logout\" class=\"text-[20px] sm:text-[14px] font-semibold\">로그아웃</router-link>\n        </div>\n        </div>\n      </nav>\n    </header>\n    <router-view :isLoggedIn=\"isLoggedIn\" @setIsLoggedIn=\"setIsLoggedIn\" class=\"mt-[5rem]\"/>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'AppHeader',\n props: ['isLoggedIn'],\n  methods: {\n    setIsLoggedIn(value) {\n      this.$emit('setIsLoggedIn', value); // 로그인 상태 변경 이벤트를 부모 컴포넌트로 전달\n    },\n    logout() {\n      // 로그아웃 로직을 구현합니다.\n      // 여기에서는 단순히 로그인 상태를 false로 설정하여 예시를 보여줍니다.\n      this.setIsLoggedIn(false); // 로그아웃 상태로 변경\n      // 로그아웃 후에 추가적인 처리가 필요하다면 여기에 추가하세요.\n    },\n  },\n};\n</script>\n\n<style scoped>\n\n</style>\n\n"],"mappings":"AA6BA,eAAe;EACbA,IAAI,EAAE,WAAW;EAClBC,KAAK,EAAE,CAAC,YAAY,CAAC;EACpBC,OAAO,EAAE;IACPC,aAAaA,CAACC,KAAK,EAAE;MACnB,IAAI,CAACC,KAAK,CAAC,eAAe,EAAED,KAAK,CAAC,EAAE;IACtC,CAAC;IACDE,MAAMA,CAAA,EAAG;MACP;MACA;MACA,IAAI,CAACH,aAAa,CAAC,KAAK,CAAC,EAAE;MAC3B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}