{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      registrationSuccess: false,\n      registrationError: '',\n      registrationMessage: ''\n    };\n  },\n  methods: {\n    register() {\n      axios.post('http://127.0.0.1:8000/register', {\n        name: this.name,\n        email: this.email,\n        password: this.password,\n        password_confirmation: this.password_confirmation\n      }).then(response => {\n        console.log(response); // 응답 전체를 콘솔에 출력하여 확인\n        console.log(response.data); // 데이터에 접근하기 전에 확인\n        // 성공 처리\n      }).catch(error => {\n        console.error(error);\n        // 오류 처리\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","name","email","password","password_confirmation","registrationSuccess","registrationError","registrationMessage","methods","register","post","then","response","console","log","catch","error"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/RegisterFrom.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"register\" class=\"flex flex-col py-[20%] items-center gap-[10px]\">\n    <input type=\"text\" v-model=\"name\" placeholder=\"이름\" required>\n    <input type=\"email\" v-model=\"email\" placeholder=\"이메일\" required>\n    <input type=\"password\" v-model=\"password\" placeholder=\"비밀번호\" required>\n    <input type=\"password\" v-model=\"password_confirmation\" placeholder=\"비밀번호 확인\" required>\n    <button type=\"submit\">가입하기</button>\n    \n    <!-- 추가: 회원가입 성공 메시지 -->\n    <div v-if=\"registrationSuccess\" class=\"text-green-500 mt-4\">\n      {{ registrationMessage }}\n    </div>\n    \n    <!-- 추가: 회원가입 오류 메시지 -->\n    <div v-if=\"registrationError\" class=\"text-red-500 mt-4\">\n      {{ registrationError }}\n    </div>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      registrationSuccess: false,\n      registrationError: '',\n      registrationMessage: '',\n    };\n  },\n  methods: {\n    register() {\n      axios.post('http://127.0.0.1:8000/register', {\n        name: this.name,\n        email: this.email,\n        password: this.password,\n        password_confirmation: this.password_confirmation,\n      })\n      .then(response => {\n    console.log(response); // 응답 전체를 콘솔에 출력하여 확인\n    console.log(response.data); // 데이터에 접근하기 전에 확인\n    // 성공 처리\n})\n.catch(error => {\n    console.error(error);\n    // 오류 처리\n});\n    }\n  }\n};\n</script>\n"],"mappings":"AAqBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,qBAAqB,EAAE,EAAE;MACzBC,mBAAmB,EAAE,KAAK;MAC1BC,iBAAiB,EAAE,EAAE;MACrBC,mBAAmB,EAAE;IACvB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACTV,KAAK,CAACW,IAAI,CAAC,gCAAgC,EAAE;QAC3CT,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,qBAAqB,EAAE,IAAI,CAACA;MAC9B,CAAC,EACAO,IAAI,CAACC,QAAO,IAAK;QACpBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,EAAE;QACvBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACZ,IAAI,CAAC,EAAE;QAC5B;MACJ,CAAC,EACAe,KAAK,CAACC,KAAI,IAAK;QACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;QACpB;MACJ,CAAC,CAAC;IACE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}