{"ast":null,"code":"import axios from 'axios';\nimport { loadTossPayments } from \"@tosspayments/payment-sdk\";\nconst clientKey = \"test_ck_Z61JOxRQVEnMKwkkDyw0rW0X9bAq\";\nlet func1 = loadTossPayments(clientKey);\nexport default {\n  name: \"pgWindow\",\n  data() {\n    return {\n      isLoggedIn: false,\n      userName: '',\n      order: '',\n      money: ''\n    };\n  },\n  mounted() {\n    let loggedIn = sessionStorage.getItem(\"logg\");\n    let name = sessionStorage.getItem(\"name\");\n    let order = sessionStorage.getItem(\"order\");\n    let money = sessionStorage.getItem(\"money\");\n    this.isLoggedIn = loggedIn;\n    this.userName = name;\n    this.order = order;\n    this.money = money;\n  },\n  created() {},\n  methods: {\n    pay: function (method) {\n      func1.then(tossPayments => {\n        let amt = Number(this.money);\n        let orderId = new Date().getTime();\n        tossPayments.requestPayment(method, {\n          amount: amt,\n          orderId: orderId,\n          orderName: this.order,\n          customerName: this.userName,\n          successUrl: \"http://localhost:8080/success\",\n          failUrl: \"http://localhost:8080/fail\"\n        }).catch(error => {\n          if (error.code === \"USER_CANCEL\") {\n            alert(\"결제를 취소했습니다.\");\n          } else {\n            alert(error.message);\n          }\n        });\n        axios.post('http://127.0.0.1:8000/credit', {\n          amount: amt,\n          orderName: this.order,\n          customerName: this.userName\n        }).then(response => {\n          console.log(response.data);\n        }).catch(error => {\n          console.error('Server responded with error:', error.response.data);\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","loadTossPayments","clientKey","func1","name","data","isLoggedIn","userName","order","money","mounted","loggedIn","sessionStorage","getItem","created","methods","pay","method","then","tossPayments","amt","Number","orderId","Date","getTime","requestPayment","amount","orderName","customerName","successUrl","failUrl","catch","error","code","alert","message","post","response","console","log"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/toss/TossCheck.vue"],"sourcesContent":["<template>\n  <section class=\"\">\n    <div class=\"flex w-full\" style=\"background-color:#F2F4F8\">\n      <div class=\"px-[10%] pt-[10%]\">\n        <h1 class=\"text-[20px] font-semibold\">결제방법</h1>\n      </div>\n    </div>\n  </section>\n  <section class=\"section px-[10%] pt-[20px] pb-[180px]\" style=\"background-color:#F2F4F8\">\n    <div class=\"container flex flex-col gap-[10px] text-[24px] font-normal\">\n      <div class=\"flex gap-[10px]\">\n      <button class=\"button flex-1 is-link border-[4px] px-[20px] py-[10px]\" style=\"border: 1px solid #CECECE; color:#7B7B7B;\" v-on:click=\"pay('카드')\">일반결제창</button>\n      <button class=\"button flex-1 is-link border-[4px] px-[20px]\" style=\"border: 1px solid #CECECE; color:#7B7B7B;\" v-on:click=\"pay('가상계좌')\">가상계좌</button>\n      <button class=\"button flex-1 is-link border-[4px] px-[20px]\" style=\"border: 1px solid #CECECE; color:#7B7B7B;\" v-on:click=\"pay('계좌이체')\">계좌이체</button>\n      <button class=\"button flex-1 is-link border-[4px] px-[20px]\" style=\"border: 1px solid #CECECE; color:#7B7B7B;\" v-on:click=\"pay('휴대폰')\">휴대폰</button>\n      </div>\n    <div class=\"flex gap-[10px]\">\n      <button class=\"button flex-1 is-link border-[4px] px-[20px] py-[10px]\" style=\"border: 1px solid #CECECE; color:#7B7B7B;\" v-on:click=\"pay('문화상품권')\">문화상품권</button>\n      <button class=\"button flex-1 is-link border-[4px] px-[20px]\" style=\"border: 1px solid #CECECE; color:#7B7B7B;\" v-on:click=\"pay('도서문화상품권')\">도서문화상품권</button>\n      <button class=\"button flex-1 is-link border-[4px] px-[20px]\" style=\"border: 1px solid #CECECE; color:#7B7B7B;\" v-on:click=\"pay('게임문화상품권')\">게임문화상품권</button>\n      <div class=\"flex-1 px-[20px]\"></div>\n    </div>\n    </div>\n  </section>\n\n  <!-- 선택한 페이지 렌더링 -->\n  <router-view />\n</template>\n\n<script>\nimport axios from 'axios';\nimport { loadTossPayments } from \"@tosspayments/payment-sdk\";\nconst clientKey = \"test_ck_Z61JOxRQVEnMKwkkDyw0rW0X9bAq\";\n\nlet func1 = loadTossPayments(clientKey);\n\nexport default {\n  name: \"pgWindow\",\n  data(){\n    return{\n      isLoggedIn: false,\n      userName: '',\n      order: '',\n      money: '',\n    };\n  },\n  mounted() {\n    let loggedIn = sessionStorage.getItem(\"logg\");\n    let name = sessionStorage.getItem(\"name\");\n    let order = sessionStorage.getItem(\"order\");\n    let money = sessionStorage.getItem(\"money\");\n    this.isLoggedIn = loggedIn;\n    this.userName = name;\n    this.order = order;\n    this.money = money;\n  },\n  created() {},\n  methods: {\n    pay: function (method) {\n      func1.then((tossPayments) => {\n        let amt = Number(this.money);\n        let orderId = new Date().getTime();\n\n        tossPayments\n          .requestPayment(method, {\n            amount: amt,\n            orderId: orderId,\n            orderName: this.order,\n            customerName: this.userName,\n            successUrl: \"http://localhost:8080/success\",\n            failUrl: \"http://localhost:8080/fail\",\n          })\n          .catch((error) => {\n            if (error.code === \"USER_CANCEL\") {\n              alert(\"결제를 취소했습니다.\");\n            } else {\n              alert(error.message);\n            }\n          });\n          axios.post('http://127.0.0.1:8000/credit', {\n                amount: amt,\n                orderName: this.order,\n                customerName: this.userName,\n                })\n                .then(response => {\n                    console.log(response.data);\n                })\n                .catch(error => {\n                    console.error('Server responded with error:', error.response.data);\n            });\n      });\n    },\n  },\n};\n</script>\n\n<style></style>"],"mappings":"AA8BA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,gBAAe,QAAS,2BAA2B;AAC5D,MAAMC,SAAQ,GAAI,sCAAsC;AAExD,IAAIC,KAAI,GAAIF,gBAAgB,CAACC,SAAS,CAAC;AAEvC,eAAe;EACbE,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIC,QAAO,GAAIC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIT,IAAG,GAAIQ,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIL,KAAI,GAAII,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIJ,KAAI,GAAIG,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACP,UAAS,GAAIK,QAAQ;IAC1B,IAAI,CAACJ,QAAO,GAAIH,IAAI;IACpB,IAAI,CAACI,KAAI,GAAIA,KAAK;IAClB,IAAI,CAACC,KAAI,GAAIA,KAAK;EACpB,CAAC;EACDK,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZC,OAAO,EAAE;IACPC,GAAG,EAAE,SAAAA,CAAUC,MAAM,EAAE;MACrBd,KAAK,CAACe,IAAI,CAAEC,YAAY,IAAK;QAC3B,IAAIC,GAAE,GAAIC,MAAM,CAAC,IAAI,CAACZ,KAAK,CAAC;QAC5B,IAAIa,OAAM,GAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QAElCL,YAAW,CACRM,cAAc,CAACR,MAAM,EAAE;UACtBS,MAAM,EAAEN,GAAG;UACXE,OAAO,EAAEA,OAAO;UAChBK,SAAS,EAAE,IAAI,CAACnB,KAAK;UACrBoB,YAAY,EAAE,IAAI,CAACrB,QAAQ;UAC3BsB,UAAU,EAAE,+BAA+B;UAC3CC,OAAO,EAAE;QACX,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;UAChB,IAAIA,KAAK,CAACC,IAAG,KAAM,aAAa,EAAE;YAChCC,KAAK,CAAC,aAAa,CAAC;UACtB,OAAO;YACLA,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;UACtB;QACF,CAAC,CAAC;QACFnC,KAAK,CAACoC,IAAI,CAAC,8BAA8B,EAAE;UACrCV,MAAM,EAAEN,GAAG;UACXO,SAAS,EAAE,IAAI,CAACnB,KAAK;UACrBoB,YAAY,EAAE,IAAI,CAACrB;QACnB,CAAC,EACAW,IAAI,CAACmB,QAAO,IAAK;UACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAChC,IAAI,CAAC;QAC9B,CAAC,EACA0B,KAAK,CAACC,KAAI,IAAK;UACZM,OAAO,CAACN,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACK,QAAQ,CAAChC,IAAI,CAAC;QAC1E,CAAC,CAAC;MACR,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}