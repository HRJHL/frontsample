{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'App',\n  components: {},\n  data() {\n    return {\n      isLoggedIn: false,\n      isState: false,\n      isChat: false,\n      isMess: false,\n      userName: '',\n      isScrolled: false,\n      profile: '',\n      newMessage: '',\n      messages: [],\n      messages2: [],\n      email: ''\n    };\n  },\n  computed: {\n    isRootPath() {\n      return this.$route.path === '/';\n    },\n    logoSrc() {\n      if (this.isRootPath) {\n        return this.isScrolled ? require('@/assets/logo.svg') : require('@/assets/logo2.svg');\n      } else {\n        return require('@/assets/logo.svg');\n      }\n    },\n    combinedMessages() {\n      // messages와 messages2 배열을 번갈아가며 합친 배열 반환\n      return this.messages.flatMap((msg, i) => [msg, this.messages2[i]]);\n    }\n  },\n  mounted() {\n    let loggedIn = sessionStorage.getItem(\"logg\");\n    let name = sessionStorage.getItem(\"name\");\n    let email = sessionStorage.getItem(\"email\");\n    let profile = sessionStorage.getItem(\"profile\");\n    this.email = email;\n    this.isLoggedIn = loggedIn;\n    this.userName = name;\n    if (profile == \"a\") {\n      this.profile = null;\n    } else {\n      this.profile = profile;\n    }\n    this.isState = false;\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    state() {\n      if (this.isState == false) {\n        this.isState = true;\n      } else {\n        this.isState = false;\n      }\n    },\n    logout() {\n      sessionStorage.clear();\n      this.isState = false;\n      window.location.href = '/';\n    },\n    user() {\n      this.isState = false;\n      window.location.href = \"/userpage\";\n    },\n    handleScroll() {\n      this.isScrolled = window.scrollY > 0;\n    },\n    Chat() {\n      if (this.isChat == false && this.isMess == false) {\n        this.isChat = true;\n      } else {\n        this.isChat = false;\n        this.isMess = false;\n      }\n    },\n    Mess() {\n      if (this.isMess == false) {\n        this.isMess = true;\n        this.isChat = false;\n      }\n    },\n    home() {\n      if (this.isChat == false) {\n        this.isChat = true;\n        this.isMess = false;\n      }\n    },\n    reset() {\n      window.location.href = \"/\";\n    },\n    sendMessage() {\n      if (this.newMessage.trim()) {\n        this.messages.push(this.newMessage);\n        if (this.newMessage.includes(\"안녕\") || this.newMessage.includes(\"하이\")) {\n          this.messages2.push(\"안녕하세요.\");\n        } else {\n          if (this.newMessage.includes(\"?\")) {\n            axios.post('http://127.0.0.1:8000/chat', {\n              email: this.email,\n              message: this.newMessage\n            }).then(response => {\n              console.log(response);\n            }).catch(error => {\n              console.error(error);\n            });\n            this.messages2.push(\"문의가 접수되었습니다. 답변을 기다려 주세요\");\n          } else {\n            this.messages2.push(\"'?' 를 포함해서 질문해 주세요\");\n          }\n        }\n        this.newMessage = '';\n        this.$nextTick(() => {\n          const container = this.$el.querySelector('.flex-col');\n          container.scrollTop = container.scrollHeight;\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","components","data","isLoggedIn","isState","isChat","isMess","userName","isScrolled","profile","newMessage","messages","messages2","email","computed","isRootPath","$route","path","logoSrc","require","combinedMessages","flatMap","msg","i","mounted","loggedIn","sessionStorage","getItem","window","addEventListener","handleScroll","beforeUnmount","removeEventListener","methods","state","logout","clear","location","href","user","scrollY","Chat","Mess","home","reset","sendMessage","trim","push","includes","post","message","then","response","console","log","catch","error","$nextTick","container","$el","querySelector","scrollTop","scrollHeight"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <header :class=\"['header',{'scrolled': isScrolled && isRootPath, 'not-root': !isRootPath }]\" class=\"flex w-full fixed z-40 border-b\">\n      <nav class=\"navi w-full ml-[12.5%] gap-[18%] h-[81px]\">\n        <div class=\"flex items-center\">\n          <router-link to=\"/\">\n          <img :src=\"logoSrc\" class=\"w-[142px] h-auto\">\n          </router-link>\n        </div>\n        <div class=\"flex w-full items-center\">\n        <div class=\"navbar flex-1 flex gap-[20%] md:gap-[20%] sm:gap-[20%]\">\n          <router-link v-if=\"isLoggedIn\" to=\"/message\" @click=\"this.isState=false\" class=\"message text-[20px] md:text-[14px] sm:text-[10px] font-semibold\">메시지</router-link>\n          <button v-if=\"!isLoggedIn\" onclick=\"location.href='/login'\"  class=\"text-[20px] md:text-[14px] sm:text-[10px] font-semibold\">메시지</button>\n          <router-link v-if=\"isLoggedIn\" to=\"/credit\" @click=\"this.isState=false\" class=\"credit text-[20px] md:text-[14px] sm:text-[10px] font-semibold\">크레딧</router-link>\n          <button v-if=\"!isLoggedIn\" onclick=\"location.href='/login'\" class=\"text-[20px] md:text-[14px] sm:text-[10px] font-semibold\">크레딧</button>\n\n        </div>\n        <div class=\"flex-1 flex justify-end items-center gap-[10px] pr-[100px] md:pr-[80px] sm:pr-[30px]\">\n          <div v-if=\"isLoggedIn\">\n          <img v-if=\"profile\" :src=\"`http://127.0.0.1:8000/storage/${profile}`\" class=\"w-[50px] md:w-[30px] sm:w-[20px] h-auto\">\n          <img v-else src=\"@/assets/icon2/person.svg\" class=\"w-[50px] md:w-[30px] sm:w-[20px] h-auto\" alt=\"Default Image\">\n          </div>\n          <div v-if=\"isLoggedIn\" @click=\"state()\" class=\"text-[20px] mr-[45px] md:text-[14px] sm:text-[10px] font-semibold\">{{ userName }}님</div>\n          <div v-if=\"isState\" class=\"absolute border shoadow top-[80px] text-[20px] gap-[5px] px-[40px] py-[10px] \" style=\"background-color: #FFFFFF; color:black;\">\n            <div @click=\"user()\">회원 정보</div>\n            <div>--------</div>\n            <div @click=\"logout()\">로그아웃</div>\n          </div>\n          <router-link v-if=\"!isLoggedIn\" to=\"/login\" class=\"text-[20px] sm:text-[10px] font-semibold\">로그인</router-link>\n        </div>\n        </div>\n      </nav>\n      <div v-if=\"isChat\" class=\" absolute w-[300px] h-[500px] top-[100px] right-[50px] sm:right-[30px] p-[20px] rounded-[8px] border\" style=\"background-color:#ffffff\">\n        <div class=\"flex flex-col gap-[10px]\">\n          <div class=\"flex flex-row gap-[20px] border-b pb-[10px] mb-[10px]\" style=\"border-color:black\">\n            <div>\n              <img src=\"@/assets/amuz.png\" class=\"w-[50px]\">\n            </div>\n            <div class=\"flex text-[30px] font-semibold\" style=\"color:black\">Sendgo</div>\n          </div>\n          <div class=\"flex flex-col p-[10px] rounded-[8px] gap-[10px]\" style=\"background-color:skyblue\">\n            <div class=\"flex flex-row gap-[20px]\">\n              <div>\n                <img src=\"@/assets/icon2/person.svg\">\n              </div>\n              <div class=\"text-[18px]\" style=\"color:black\">{{ userName }}님</div>\n            </div>\n            <div class=\"flex justify-center rounded-[8px]\" @click=\"Mess()\" style=\"background-color:white; color:black\"> 문의하기</div>\n          </div>\n          <div class=\"flex flex-row h-full\">\n            <div class=\"flex items-center\" style=\"color:black\"></div>\n          </div>\n        </div>\n        <div class=\"flex flex-row justify-between px-[20px] pt-[250px]\">\n          <div><img src=\"@/assets/icon2/person.svg\" @click=\"home()\"></div>\n          <div><img src=\"@/assets/icon2/clock.svg\" @click=\"Mess()\"></div>\n          <div><img src=\"@/assets/icon2/reroll.svg\" @click=\"reset()\"></div>\n        </div>\n      </div>\n      <div v-if=\"isMess\" class=\" absolute w-[300px] h-[500px] top-[100px] right-[50px] sm:right-[30px] p-[20px] rounded-[8px] border\" style=\"background-color:#ffffff\">\n        <div class=\"flex flex-col h-[380px] rounded-[8px] mb-[10px] px-[10px] py-[10px]\" style=\"background-color:skyblue; overflow-y: auto;\">\n          <div class=\"border-b\" style=\"border-color:black; color:balck\">문의페이지</div>\n          <div v-for=\"(message, index) in combinedMessages\" :key=\"index\" :class=\"{'flex justify-end': index % 2 === 0, 'flex justify-start': index % 2 !== 0}\" class=\"mb-[10px] px-[10px]\">\n    <p class=\"text-black rounded-[8px] px-[10px] py-[5px]\" style=\"background-color:#ffffff\">{{ message }}</p>\n  </div>\n        </div>\n        <input v-model=\"newMessage\" @keyup.enter=\"sendMessage\" type=\"text\" class=\"flex w-full px-[10px] py-[5px] border\" style=\"color:black\">\n        <div class=\"flex flex-row justify-between px-[20px] pt-[10px]\">\n          <div><img src=\"@/assets/icon2/person.svg\" @click=\"home()\"></div>\n          <div><img src=\"@/assets/icon2/clock.svg\" @click=\"Mess()\"></div>\n          <div><img src=\"@/assets/icon2/reroll.svg\" @click=\"reset()\"></div>\n        </div>\n      </div>\n      <div v-if=\"isLoggedIn\" class=\"absolute w-[50px] sm:w-[30px] h-auto top-[15px] sm:top-[25px] right-[50px] sm:right-[30px]\">\n        <img src=\"@/assets/amuz.png\" @click=\"Chat()\" class=\"rounded-[8px]\">\n      </div>\n    </header>\n    <router-view class=\"mt-[5rem]\"/>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'App',\n  components: {\n\n  },\n  data(){\n    return{\n      isLoggedIn: false,\n      isState: false,\n      isChat: false,\n      isMess: false,\n      userName: '',\n      isScrolled: false,\n      profile: '',\n      newMessage: '',\n      messages: [],\n      messages2: [],\n      email: '',\n    };\n  },\n  computed: {\n    isRootPath() {\n      return this.$route.path === '/';\n    },\n    logoSrc() {\n      if(this.isRootPath){\n        return this.isScrolled ? require('@/assets/logo.svg') : require('@/assets/logo2.svg');\n      } else {\n        return require('@/assets/logo.svg');\n      }\n    },\n    combinedMessages() {\n      // messages와 messages2 배열을 번갈아가며 합친 배열 반환\n      return this.messages.flatMap((msg, i) => [msg, this.messages2[i]]);\n    },\n  },\n  mounted() {\n    let loggedIn = sessionStorage.getItem(\"logg\");\n    let name = sessionStorage.getItem(\"name\");\n    let email = sessionStorage.getItem(\"email\");\n    let profile = sessionStorage.getItem(\"profile\");\n    this.email = email;\n    this.isLoggedIn = loggedIn;\n    this.userName = name;\n    if(profile==\"a\"){\n      this.profile = null;\n    }else{\n      this.profile = profile;\n      }\n    this.isState = false;\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    state(){\n    if (this.isState == false) {\n        this.isState = true;\n    } else {\n        this.isState = false;\n    }\n    },\n    logout() {\n      sessionStorage.clear();\n      this.isState = false;\n      window.location.href ='/';\n      },\n    user(){\n      this.isState = false;\n      window.location.href=\"/userpage\";\n    },\n    handleScroll() {\n      this.isScrolled = window.scrollY > 0;\n    },\n    Chat() {\n      if(this.isChat==false && this.isMess==false){\n        this.isChat = true;\n      }\n      else{\n        this.isChat =false;\n        this.isMess =false;\n      }\n    },\n    Mess() {\n      if(this.isMess==false){\n        this.isMess = true;\n        this.isChat = false;\n      }\n    },\n    home() {\n      if(this.isChat==false){\n        this.isChat = true;\n        this.isMess = false;\n      }\n    },\n    reset() {\n      window.location.href =\"/\";\n    },\n    sendMessage() {\n      if (this.newMessage.trim()) {\n        this.messages.push(this.newMessage);\n        if(this.newMessage.includes(\"안녕\")||this.newMessage.includes(\"하이\")){\n          this.messages2.push(\"안녕하세요.\");\n        }else{\n          if(this.newMessage.includes(\"?\")){\n            axios.post('http://127.0.0.1:8000/chat', {\n              email: this.email,\n              message: this.newMessage,\n              })\n              .then(response => {\n                console.log(response);\n              })\n              .catch(error => {\n                console.error(error);\n              });\n              this.messages2.push(\"문의가 접수되었습니다. 답변을 기다려 주세요\");\n          }\n          else{\n            this.messages2.push(\"'?' 를 포함해서 질문해 주세요\");\n          }\n        }\n        this.newMessage = '';\n        this.$nextTick(() => {\n\n          const container = this.$el.querySelector('.flex-col');\n          container.scrollTop = container.scrollHeight;\n        });\n      }\n    },\n  },\n};\n\n</script>\n\n<style>\n.navbar a.router-link-active {\n  position: relative; \n  color: blue;\n}\n\n.navbar a.router-link-active::after {\n  content: ''; \n  position: absolute; \n  left: -40px;\n  bottom: -25px; \n  width: 260%; \n  height: 3px; \n  background-color: blue;\n}\n\n.header {\n  transition: background-color 0.3s ease;\n  background-color: black;\n  color: white;\n}\n\n.header.scrolled {\n  background-color: white;\n  color: black;\n}\n\n.header.scrolled, .header.not-root {\n  background-color: white;\n  color: black;\n}\n@media (max-width: 768px) {\n  .navbar a.router-link-active::after {\n  content: ''; \n  position: absolute; \n  left: -20px;\n  bottom: -30px; \n  width: 200%; \n  height: 3px; \n  background-color: blue;\n}\n}\n\n@media (max-width: 480px) {\n  .navbar a.router-link-active::after {\n  content: ''; \n  position: absolute; \n  left: -20px;\n  bottom: -35px; \n  width: 240%; \n  height: 3px; \n  background-color: blue;\n}\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}