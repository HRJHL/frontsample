{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      identity: '',\n      password: '',\n      kakaoKey: '8a670c965eb7e112ae1be878b9ce90b9' // 카카오 JavaScript 앱 키\n    };\n  },\n  mounted() {\n    this.initializeKakao();\n  },\n  methods: {\n    login() {\n      if (!this.identity || !this.password) {\n        alert('아이디와 비밀번호를 입력해주세요.');\n        return;\n      }\n      axios.post('http://127.0.0.1:8000/login', {\n        identity: this.identity,\n        password: this.password\n      }).then(response => {\n        const {\n          name,\n          email,\n          profile_image\n        } = response.data.user;\n        const userprofile = profile_image || 'a';\n        sessionStorage.setItem(\"logg\", true);\n        sessionStorage.setItem('name', name);\n        sessionStorage.setItem('email', email);\n        sessionStorage.setItem('profile', userprofile);\n        window.location.href = '/message';\n      }).catch(error => {\n        console.error(error);\n        alert(\"아이디 혹은 비밀번호가 틀렸습니다.\");\n      });\n    },\n    Sid() {\n      window.location.href = '/searchL';\n    },\n    Spw() {\n      window.location.href = '/searchP';\n    },\n    initializeKakao() {\n      if (!window.Kakao.isInitialized()) {\n        window.Kakao.init(this.kakaoKey);\n      }\n    },\n    kakaoLogin() {\n      window.Kakao.Auth.login({\n        success: authObj => {\n          console.log('로그인 성공:', authObj);\n          this.getKakaoAccount();\n        },\n        fail: err => {\n          console.error('로그인 실패:', err);\n          alert('카카오 로그인에 실패했습니다.');\n        }\n      });\n    },\n    getKakaoAccount() {\n      window.Kakao.API.request({\n        url: '/v2/user/me',\n        success: res => {\n          const kakao_account = res.kakao_account;\n          const nickname = kakao_account.profile.nickname;\n          const email = kakao_account.email;\n\n          // 로그인 성공 후 처리\n          alert(`로그인 성공!\\n닉네임: ${nickname}\\n이메일: ${email}`);\n          // 서버에 사용자 정보 전송 예시\n          // axios.post('http://example.com/api/user', { nickname, email });\n        },\n        fail: error => {\n          console.error('정보 요청 실패:', error);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","identity","password","kakaoKey","mounted","initializeKakao","methods","login","alert","post","then","response","name","email","profile_image","user","userprofile","sessionStorage","setItem","window","location","href","catch","error","console","Sid","Spw","Kakao","isInitialized","init","kakaoLogin","Auth","success","authObj","log","getKakaoAccount","fail","err","API","request","url","res","kakao_account","nickname","profile"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/LoginFrom.vue"],"sourcesContent":["<template>\n  <div class=\"w-full px-[30%] py-[10%]\" style=\"background-color:#FFFFF\">\n    <form @submit.prevent=\"login\">\n      <div class=\"flex w-full flex-col items-center justify-center\">\n        <!-- 배너 이미지 -->\n        <img src=\"@/assets/sendgo/logo.svg\" class=\"w-[300px] lg:w-[250px] md:w-[200px] sm:w-[150px] h-auto mb-[80px] lg:mb-[60px] md:mb-[50px] sm:mb-[40px]\">\n      </div>\n      <div class=\"flex flex-col mb-[20px] sm:mb-[10px] items-start gap-[20px] sm:gap-[10px]\">\n        <!-- 로그인 폼 -->\n        <input type=\"text\" v-model=\"identity\" placeholder=\"아이디\" class=\"text-[20px] sm:text-[14px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\">\n        <input type=\"password\" v-model=\"password\" placeholder=\"비밀번호\" class=\"text-[20px] sm:text-[14px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\">\n      </div>\n      <!-- 아이디 비번 찾기 -->\n      <div class=\"flex flex-row justify-end gap-[10px] mb-[20px]\">\n        <div @click=\"Sid\" class=\"text-[15px] cursor-pointer\">아이디 찾기</div>\n        <div class=\"text-[15px]\">|</div>\n        <div @click=\"Spw\" class=\"text-[15px] cursor-pointer\">비밀번호 찾기</div>\n      </div>\n      <div class=\"flex justify-center rounded-[8px] mb-[30px] sm:mb-[20px]\" style=\"background-color:#4F44F0;\">\n        <button type=\"submit\" class=\"font-semibold px-[20px] py-[15px] sm:text-[14px] sm:py-[10px]\" style=\"color:#FFFFFF\">로그인</button>\n      </div>\n      <a id=\"custom-login-btn\" @click=\"kakaoLogin()\">\n        <img\n          src=\"https://k.kakaocdn.net/14/dn/btroDszwNrM/I6efHub1SN5KCJqLm1Ovx1/o.jpg\"\n          width=\"222\"\n          alt=\"카카오 로그인 버튼\"\n        />\n      </a>\n      <div class=\"flex justify-center sm:text-[10px]\">\n        계정이 없으신가요?&nbsp;<router-link to=\"/register\" class=\"font-semibold border-b\" style=\"color:#4F44F0; border-color:#4F44F0;\">회원가입하기</router-link>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      identity: '',\n      password: '',\n      kakaoKey: '8a670c965eb7e112ae1be878b9ce90b9' // 카카오 JavaScript 앱 키\n    };\n  },\n  mounted() {\n    this.initializeKakao();\n  },\n  methods: {\n    login() {\n      if (!this.identity || !this.password) {\n        alert('아이디와 비밀번호를 입력해주세요.');\n        return;\n      }\n      axios.post('http://127.0.0.1:8000/login', {\n        identity: this.identity,\n        password: this.password,\n      })\n      .then(response => {\n        const { name, email, profile_image } = response.data.user;\n        const userprofile = profile_image || 'a';\n        sessionStorage.setItem(\"logg\", true);\n        sessionStorage.setItem('name', name);\n        sessionStorage.setItem('email', email);\n        sessionStorage.setItem('profile', userprofile);\n        window.location.href = '/message';\n      })\n      .catch(error => {\n        console.error(error);\n        alert(\"아이디 혹은 비밀번호가 틀렸습니다.\");\n      });\n    },\n    Sid() {\n      window.location.href = '/searchL';\n    },\n    Spw() {\n      window.location.href = '/searchP';\n    },\n    initializeKakao() {\n      if (!window.Kakao.isInitialized()) {\n        window.Kakao.init(this.kakaoKey);\n      }\n    },\n    kakaoLogin() {\n      window.Kakao.Auth.login({\n        success: (authObj) => {\n          console.log('로그인 성공:', authObj);\n          this.getKakaoAccount();\n        },\n        fail: (err) => {\n          console.error('로그인 실패:', err);\n          alert('카카오 로그인에 실패했습니다.');\n        }\n      });\n    },\n    getKakaoAccount() {\n      window.Kakao.API.request({\n        url: '/v2/user/me',\n        success: (res) => {\n          const kakao_account = res.kakao_account;\n          const nickname = kakao_account.profile.nickname;\n          const email = kakao_account.email;\n\n          // 로그인 성공 후 처리\n          alert(`로그인 성공!\\n닉네임: ${nickname}\\n이메일: ${email}`);\n          // 서버에 사용자 정보 전송 예시\n          // axios.post('http://example.com/api/user', { nickname, email });\n        },\n        fail: (error) => {\n          console.error('정보 요청 실패:', error);\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* CSS 스타일 개선 */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}