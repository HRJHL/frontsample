{"ast":null,"code":"import TossPayments from '@tosspayments/payment-sdk';\nexport default {\n  data() {\n    return {\n      couponApplied: false,\n      amount: 50000,\n      widgetClientKey: \"test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm\",\n      customerKey: \"1rNzb3iHa8gPgRkLABTcJ\",\n      tossPayments: null,\n      widgets: null,\n      paymentMethodWidget: null\n    };\n  },\n  mounted() {\n    this.initializeTossPayments();\n  },\n  methods: {\n    async initializeTossPayments() {\n      try {\n        this.tossPayments = TossPayments(this.widgetClientKey);\n        this.widgets = this.tossPayments.widgets({\n          customerKey: this.customerKey\n        });\n        await this.widgets.setAmount({\n          currency: \"KRW\",\n          value: this.amount\n        });\n        await Promise.all([this.renderPaymentMethods(), this.renderAgreement()]);\n      } catch (error) {\n        console.error('Error initializing Toss Payments:', error);\n      }\n    },\n    async renderPaymentMethods() {\n      this.paymentMethodWidget = await this.widgets.renderPaymentMethods({\n        selector: \"#payment-method\",\n        variantKey: \"DEFAULT\"\n      });\n    },\n    async renderAgreement() {\n      await this.widgets.renderAgreement({\n        selector: \"#agreement\",\n        variantKey: \"AGREEMENT\"\n      });\n    },\n    async applyCoupon() {\n      try {\n        const updatedAmount = this.couponApplied ? this.amount : this.amount - 5000;\n        await this.widgets.setAmount({\n          currency: \"KRW\",\n          value: updatedAmount\n        });\n        this.couponApplied = !this.couponApplied;\n      } catch (error) {\n        console.error('Error applying coupon:', error);\n      }\n    },\n    async processPayment() {\n      try {\n        await this.widgets.requestPayment({\n          orderId: \"zSpkmBCED-aslEKg0n72-\",\n          orderName: \"토스 티셔츠 외 2건\",\n          successUrl: window.location.origin + \"/success.html\",\n          failUrl: window.location.origin + \"/fail.html\",\n          customerEmail: \"customer123@gmail.com\",\n          customerName: \"김토스\",\n          customerMobilePhone: \"01012341234\"\n        });\n      } catch (error) {\n        console.error('Error processing payment:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["TossPayments","data","couponApplied","amount","widgetClientKey","customerKey","tossPayments","widgets","paymentMethodWidget","mounted","initializeTossPayments","methods","setAmount","currency","value","Promise","all","renderPaymentMethods","renderAgreement","error","console","selector","variantKey","applyCoupon","updatedAmount","processPayment","requestPayment","orderId","orderName","successUrl","window","location","origin","failUrl","customerEmail","customerName","customerMobilePhone"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/toss/TossCheck.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <input type=\"checkbox\" id=\"coupon-box\" @change=\"applyCoupon\" />\n      <label for=\"coupon-box\"> 5,000원 쿠폰 적용 </label>\n    </div>\n    <!-- 결제 UI -->\n    <div ref=\"paymentMethod\"></div>\n    <!-- 이용약관 UI -->\n    <div ref=\"agreement\"></div>\n    <!-- 결제하기 버튼 -->\n    <button class=\"button\" @click=\"processPayment\" style=\"margin-top: 30px\">결제하기</button>\n  </div>\n</template>\n\n<script>\nimport TossPayments from '@tosspayments/payment-sdk';\n\nexport default {\n  data() {\n    return {\n      couponApplied: false,\n      amount: 50000,\n      widgetClientKey: \"test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm\",\n      customerKey: \"1rNzb3iHa8gPgRkLABTcJ\",\n      tossPayments: null,\n      widgets: null,\n      paymentMethodWidget: null\n    };\n  },\n  mounted() {\n    this.initializeTossPayments();\n  },\n  methods: {\n    async initializeTossPayments() {\n      try {\n        this.tossPayments = TossPayments(this.widgetClientKey);\n        this.widgets = this.tossPayments.widgets({ customerKey: this.customerKey });\n\n        await this.widgets.setAmount({\n          currency: \"KRW\",\n          value: this.amount,\n        });\n\n        await Promise.all([\n          this.renderPaymentMethods(),\n          this.renderAgreement()\n        ]);\n      } catch (error) {\n        console.error('Error initializing Toss Payments:', error);\n      }\n    },\n    async renderPaymentMethods() {\n      this.paymentMethodWidget = await this.widgets.renderPaymentMethods({\n        selector: \"#payment-method\",\n        variantKey: \"DEFAULT\",\n      });\n    },\n    async renderAgreement() {\n      await this.widgets.renderAgreement({\n        selector: \"#agreement\",\n        variantKey: \"AGREEMENT\",\n      });\n    },\n    async applyCoupon() {\n      try {\n        const updatedAmount = this.couponApplied ? this.amount : this.amount - 5000;\n\n        await this.widgets.setAmount({\n          currency: \"KRW\",\n          value: updatedAmount,\n        });\n\n        this.couponApplied = !this.couponApplied;\n      } catch (error) {\n        console.error('Error applying coupon:', error);\n      }\n    },\n    async processPayment() {\n      try {\n        await this.widgets.requestPayment({\n          orderId: \"zSpkmBCED-aslEKg0n72-\",\n          orderName: \"토스 티셔츠 외 2건\",\n          successUrl: window.location.origin + \"/success.html\",\n          failUrl: window.location.origin + \"/fail.html\",\n          customerEmail: \"customer123@gmail.com\",\n          customerName: \"김토스\",\n          customerMobilePhone: \"01012341234\",\n        });\n      } catch (error) {\n        console.error('Error processing payment:', error);\n      }\n    }\n  }\n};\n</script>\n"],"mappings":"AAgBA,OAAOA,YAAW,MAAO,2BAA2B;AAEpD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,MAAM,EAAE,KAAK;MACbC,eAAe,EAAE,wCAAwC;MACzDC,WAAW,EAAE,uBAAuB;MACpCC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE,IAAI;MACbC,mBAAmB,EAAE;IACvB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,sBAAsB,CAAC,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,sBAAsBA,CAAA,EAAG;MAC7B,IAAI;QACF,IAAI,CAACJ,YAAW,GAAIN,YAAY,CAAC,IAAI,CAACI,eAAe,CAAC;QACtD,IAAI,CAACG,OAAM,GAAI,IAAI,CAACD,YAAY,CAACC,OAAO,CAAC;UAAEF,WAAW,EAAE,IAAI,CAACA;QAAY,CAAC,CAAC;QAE3E,MAAM,IAAI,CAACE,OAAO,CAACK,SAAS,CAAC;UAC3BC,QAAQ,EAAE,KAAK;UACfC,KAAK,EAAE,IAAI,CAACX;QACd,CAAC,CAAC;QAEF,MAAMY,OAAO,CAACC,GAAG,CAAC,CAChB,IAAI,CAACC,oBAAoB,CAAC,CAAC,EAC3B,IAAI,CAACC,eAAe,CAAC,EACtB,CAAC;MACJ,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IACD,MAAMF,oBAAoBA,CAAA,EAAG;MAC3B,IAAI,CAACT,mBAAkB,GAAI,MAAM,IAAI,CAACD,OAAO,CAACU,oBAAoB,CAAC;QACjEI,QAAQ,EAAE,iBAAiB;QAC3BC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC;IACD,MAAMJ,eAAeA,CAAA,EAAG;MACtB,MAAM,IAAI,CAACX,OAAO,CAACW,eAAe,CAAC;QACjCG,QAAQ,EAAE,YAAY;QACtBC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,aAAY,GAAI,IAAI,CAACtB,aAAY,GAAI,IAAI,CAACC,MAAK,GAAI,IAAI,CAACA,MAAK,GAAI,IAAI;QAE3E,MAAM,IAAI,CAACI,OAAO,CAACK,SAAS,CAAC;UAC3BC,QAAQ,EAAE,KAAK;UACfC,KAAK,EAAEU;QACT,CAAC,CAAC;QAEF,IAAI,CAACtB,aAAY,GAAI,CAAC,IAAI,CAACA,aAAa;MAC1C,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACD,MAAMM,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAM,IAAI,CAAClB,OAAO,CAACmB,cAAc,CAAC;UAChCC,OAAO,EAAE,uBAAuB;UAChCC,SAAS,EAAE,aAAa;UACxBC,UAAU,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAK,GAAI,eAAe;UACpDC,OAAO,EAAEH,MAAM,CAACC,QAAQ,CAACC,MAAK,GAAI,YAAY;UAC9CE,aAAa,EAAE,uBAAuB;UACtCC,YAAY,EAAE,KAAK;UACnBC,mBAAmB,EAAE;QACvB,CAAC,CAAC;MACJ,EAAE,OAAOjB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}