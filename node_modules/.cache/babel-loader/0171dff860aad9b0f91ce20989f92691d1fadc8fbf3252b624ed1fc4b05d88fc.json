{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      users: [],\n      loading: true,\n      error: null,\n      name: '',\n      uname: '',\n      uid: '',\n      upw: '',\n      uemail: '',\n      ucreate: ''\n    };\n  },\n  mounted() {\n    let name = sessionStorage.getItem(\"name\");\n    this.name = name;\n    this.fetchCredits();\n  },\n  methods: {\n    async fetchCredits() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/userinfo', {\n          name: this.name\n        });\n        this.users = response.data.data;\n        this.uname = this.users.map(user => user.name).join(\",\");\n        this.uid = this.users.map(user => user.identity).join(\",\");\n        this.upw = \"******\";\n        this.uemail = this.users.map(user => user.email).join(\",\");\n        this.ucreate = this.users.map(user => user.created_at.substring(0, 10)).join(\",\");\n        console.log(this.users);\n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information';\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","users","loading","error","name","uname","uid","upw","uemail","ucreate","mounted","sessionStorage","getItem","fetchCredits","methods","response","post","map","user","join","identity","email","created_at","substring","console","log","message"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/UserIn.vue"],"sourcesContent":["<template>\n<div class=\"w-full px-[30%] py-[10%]\" style=\"background-color:#FFFFF\">\n    <div class=\"flex w-full flex-col items-center justify-center\">\n      <!-- 배너 이미지-->\n      <img src=\"@/assets/sendgo/logo.svg\" class=\"w-[300px] lg:w-[250px] md:w-[200px] sm:w-[150px] h-auto mb-[80px] lg:mb-[60px] md:mb-[50px] sm:mb-[40px]\">\n    </div>\n    <div class=\"flex justify-center mb-[20px]\">회원님의 정보</div>\n    <div class=\"flex flex-row mb-[20px] text-[32px] border-t\">\n      <div class=\"flex-col w-[220px] gap-[20px] font-semibold\" style=\"background-color:#F0F0F0\">\n        <div class=\"flex px-[20px] border-b\">이름</div>\n        <div class=\"flex px-[20px] border-b\">아이디</div>\n        <div class=\"flex px-[20px] border-b\">비밀번호</div>\n        <div class=\"flex px-[20px] border-b\">이메일</div>\n        <div class=\"flex px-[20px] border-b\">가입날짜</div>\n      </div>\n      <div class=\"flex-1 flex-col gap-[20px] font-semibold\">\n        <div class=\"flex px-[20px] border-b \">{{uname}}</div>\n        <div class=\"flex px-[20px] border-b \">{{uid}}</div>\n        <div class=\"flex px-[20px] border-b \">{{upw}}</div>\n        <div class=\"flex px-[20px] border-b \">{{uemail}}</div>\n        <div class=\"flex px-[20px] border-b \">{{ucreate}}</div>\n      </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      users: [],\n      loading: true,\n      error: null,\n      name: '',\n      uname: '',\n      uid: '',\n      upw: '',\n      uemail: '',\n      ucreate: '',\n    };\n  },\n  mounted() {\n    let name = sessionStorage.getItem(\"name\");\n    this.name = name;\n    this.fetchCredits();\n  },\n  methods: {\n    async fetchCredits() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/userinfo', {\n          name: this.name,\n        });\n        this.users = response.data.data;\n        this.uname = this.users.map(user=> user.name).join(\",\");\n        this.uid = this.users.map(user=> user.identity).join(\",\");\n        this.upw = \"******\";\n        this.uemail = this.users.map(user=> user.email).join(\",\");\n        this.ucreate = this.users.map(user=> user.created_at.substring(0, 10)).join(\",\");\n        console.log(this.users);\n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information'; \n        this.loading = false;\n      }\n    },\n  }\n};\n</script>\n"],"mappings":"AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,EAAE;MACPC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIN,IAAG,GAAIO,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAI,CAACR,IAAG,GAAIA,IAAI;IAChB,IAAI,CAACS,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAAC,gCAAgC,EAAE;UAClEZ,IAAI,EAAE,IAAI,CAACA;QACb,CAAC,CAAC;QACF,IAAI,CAACH,KAAI,GAAIc,QAAQ,CAACf,IAAI,CAACA,IAAI;QAC/B,IAAI,CAACK,KAAI,GAAI,IAAI,CAACJ,KAAK,CAACgB,GAAG,CAACC,IAAI,IAAGA,IAAI,CAACd,IAAI,CAAC,CAACe,IAAI,CAAC,GAAG,CAAC;QACvD,IAAI,CAACb,GAAE,GAAI,IAAI,CAACL,KAAK,CAACgB,GAAG,CAACC,IAAI,IAAGA,IAAI,CAACE,QAAQ,CAAC,CAACD,IAAI,CAAC,GAAG,CAAC;QACzD,IAAI,CAACZ,GAAE,GAAI,QAAQ;QACnB,IAAI,CAACC,MAAK,GAAI,IAAI,CAACP,KAAK,CAACgB,GAAG,CAACC,IAAI,IAAGA,IAAI,CAACG,KAAK,CAAC,CAACF,IAAI,CAAC,GAAG,CAAC;QACzD,IAAI,CAACV,OAAM,GAAI,IAAI,CAACR,KAAK,CAACgB,GAAG,CAACC,IAAI,IAAGA,IAAI,CAACI,UAAU,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACJ,IAAI,CAAC,GAAG,CAAC;QAChFK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACxB,KAAK,CAAC;MACzB,EAAE,OAAOE,KAAK,EAAE;QACdqB,OAAO,CAACrB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACY,QAAQ,EAAEf,IAAG,IAAKG,KAAK,CAACuB,OAAO,CAAC;QACpF,IAAI,CAACvB,KAAI,GAAI,oCAAoC;QACjD,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}