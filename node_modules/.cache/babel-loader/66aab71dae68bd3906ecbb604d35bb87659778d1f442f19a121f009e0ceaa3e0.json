{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"//k.kakaocdn.net/14/dn/btqCn0WEmI3/nijroPfbpCa4at5EIsjyf0/o.jpg\",\n  width: \"222\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = [_hoisted_1];\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.user.email == undefined ? (_openBlock(), _createElementBlock(\"a\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => $options.kakaoLogin())\n  }, [..._hoisted_2])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, \"nickname: \" + _toDisplayString($data.user.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"email: \" + _toDisplayString($data.user.email), 1 /* TEXT */), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.kakaoLogout && $options.kakaoLogout(...args))\n  }, \"카카오 로그아웃\")]))]);\n}","map":{"version":3,"names":["_createElementVNode","src","width","_hoisted_1","key","_createElementBlock","$data","user","email","undefined","onClick","_cache","$event","$options","kakaoLogin","_hoisted_2","_hoisted_3","_toDisplayString","name","type","args","kakaoLogout"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/LoginFrom.vue"],"sourcesContent":["<template>\n  <div>\n    <a v-if=\"user.email == undefined\" @click=\"kakaoLogin()\">\n      <img\n        src=\"//k.kakaocdn.net/14/dn/btqCn0WEmI3/nijroPfbpCa4at5EIsjyf0/o.jpg\"\n        width=\"222\"\n      />\n    </a>\n    <div v-else>\n      <p>nickname: {{ user.name }}</p>\n      <p>email: {{ user.email }}</p>\n      <button type=\"button\" @click=\"kakaoLogout\">카카오 로그아웃</button>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\n\nconst getKakaoToken = async (code) => {\n  try {\n    const data = {\n      grant_type: \"authorization_code\",\n      client_id: \"xxxxxxxxxxxx\", // REST API 키\n      redirect_uri: \"http://localhost:8080/kakaologin\",\n      code: code,\n    };\n\n    const queryString = Object.keys(data)\n      .map((k) => encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]))\n      .join(\"&\");\n    //console.log(queryString);\n\n    const result = await axios.post(\n      \"https://kauth.kakao.com/oauth/token\",\n      queryString,\n      {\n        headers: {\n          \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n        },\n      }\n    );\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return e;\n  }\n};\n\nconst getKakaoUserInfo = async () => {\n  let data = \"\";\n  await window.Kakao.API.request({\n    url: \"/v2/user/me\",\n  })\n    .then(function (response) {\n      console.log(response);\n      data = response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  console.log(\"카카오 계정 정보\", data);\n  return data;\n};\n\nexport default {\n  data() {\n    return {\n      user: {}, // TODO store로 이관 필요\n    };\n  },\n  created() {\n    const urlParams = new URLSearchParams(window.location.search);\n    // code가 있는 경우 토큰 발급 요청\n    if (urlParams.has(\"code\")) {\n      const code = urlParams.get(\"code\");\n      console.log(\"code: \", code);\n      this.setKakaoToken(code);\n    }\n  },\n  methods: {\n    // 1. 인가 코드 얻기\n    // https://developers.kakao.com/docs/latest/ko/kakaologin/js#login\n    kakaoLogin() {\n      window.Kakao.Auth.authorize({\n        redirectUri: \"http://localhost:8080/kakaologin\",\n      });\n    },\n\n    // 2. 토큰 조회\n    // https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api#request-token\n    async setKakaoToken(code) {\n      const { data } = await getKakaoToken(code);\n      if (data.error) {\n        console.log(data.error);\n        return;\n      }\n      console.log(data);\n      window.Kakao.Auth.setAccessToken(data.access_token);\n      await this.setUserInfo();\n      this.$router.push({ path: \"/kakaologin\" });\n    },\n\n    // 3. 사용자 정보 조회\n    // https://developers.kakao.com/docs/latest/ko/kakaologin/js#req-user-info\n    async setUserInfo() {\n      const res = await getKakaoUserInfo();\n      const userInfo = {\n        name: res.kakao_account.profile.nickname,\n        email: res.kakao_account.email,\n      };\n      console.log(userInfo);\n      this.user = userInfo;\n    },\n\n    // 로그아웃\n    kakaoLogout() {\n      this.user = {};\n      window.Kakao.Auth.logout()\n        .then(function (response) {\n          console.log(window.Kakao.Auth.getAccessToken()); // null\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n  },\n};\n</script>\n출처: https://happy-jjang-a.tistory.com/291 [jjang-a 블로그:티스토리]"],"mappings":";gCAGMA,mBAAA,CAGE;EAFAC,GAAG,EAAC,iEAAiE;EACrEC,KAAK,EAAC;;oBAFRC,UAGE,C;;EANRC,GAAA;AAAA;;uBACEC,mBAAA,CAYM,cAXKC,KAAA,CAAAC,IAAI,CAACC,KAAK,IAAIC,SAAS,I,cAAhCJ,mBAAA,CAKI;IAPRD,GAAA;IAEuCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU;KAFxD,IAAAC,UAAA,O,cAQIV,mBAAA,CAIM,OAZVW,UAAA,GASMhB,mBAAA,CAAgC,WAA7B,YAAU,GAAAiB,gBAAA,CAAGX,KAAA,CAAAC,IAAI,CAACW,IAAI,kBACzBlB,mBAAA,CAA8B,WAA3B,SAAO,GAAAiB,gBAAA,CAAGX,KAAA,CAAAC,IAAI,CAACC,KAAK,kBACvBR,mBAAA,CAA4D;IAApDmB,IAAI,EAAC,QAAQ;IAAET,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEP,QAAA,CAAAQ,WAAA,IAAAR,QAAA,CAAAQ,WAAA,IAAAD,IAAA,CAAW;KAAE,UAAQ,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}