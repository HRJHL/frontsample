{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      identity: '',\n      phone: '',\n      password: '',\n      isSend: false,\n      isRigist: false,\n      isReadonly: false,\n      code: '',\n      verificationCode: ''\n    };\n  },\n  methods: {\n    register() {\n      axios.post('http://127.0.0.1:8000/register', {\n        name: this.name,\n        email: this.email,\n        phone: this.phone,\n        identity: this.identity,\n        password: this.password\n      }).then(response => {\n        console.log(response.data);\n        alert(\"회원가입이 성공적으로 이루어졌습니다.\\n로그인페이지로 이동합니다.\");\n        this.$router.push('/login');\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    Send() {\n      axios.post('http://127.0.0.1:8000/mailSubmit', {\n        email: this.email\n      }).then(response => {\n        console.log(response.data.message);\n        this.verificationCode = response.data.verification_code;\n        this.isSend = true;\n      }).catch(error => {\n        console.error(error);\n        alert(\"정확한 이메일을 입력해 주세요\");\n      });\n    },\n    Verifit() {\n      if (this.code == this.verificationCode) {\n        alert(\"이메일 인증이 성공적으로 완료되었습니다.\");\n        this.isSend = false;\n        this.isRigist = true;\n        this.isReadonly = true;\n      } else {\n        alert(\"인증번호가 틀렸습니다.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","name","email","identity","phone","password","isSend","isRigist","isReadonly","code","verificationCode","methods","register","post","then","response","console","log","alert","$router","push","catch","error","Send","message","verification_code","Verifit"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/RegisterFrom.vue"],"sourcesContent":["<template>\n  <div class=\"w-full px-[30%] py-[50px]\" style=\"background-color:#FFFFF\">\n    <form @submit.prevent=\"register\">\n      <div class=\"flex w-full flex-col items-center justify-center\">\n        <img src=\"@/assets/sendgo/logo.svg\" class=\"w-[300px] lg:w-[250px] md:w-[200px] sm:w-[150px] h-auto mb-[80px] lg:mb-[60px] md:mb-[50px] sm:mb-[40px]\">\n      </div>\n      <div class=\"flex flex-col mb-[30px] items-start gap-[20px] lg:gap-[15px] md:gap-[10px] sm:gap-[10px] lg:text-[18px] md:text-[14px] sm:text-[14px]\">\n        <div class=\"font-semibold\">이름</div>\n        <input type=\"text\" v-model=\"name\" placeholder=\"홍길동\" class=\"text-[20px] md:text-[14px] sm:text-[10px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\" required>\n        <div class=\"font-semibold\">이메일</div>\n        <div class=\"flex flex-row w-full gap-[10px]\">\n          <input type=\"email\" v-model=\"email\" :readonly=\"isReadonly\" placeholder=\"--@gmail.com 이메일인증을 먼저 해주세요\" class=\"text-[20px] md:text-[14px] sm:text-[10px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\" required>\n          <button type=\"button\" @click=\"Send()\" v-if=\"!isRigist\" class=\"flex w-[60px] md:text-[12px] sm:text-[10px] justify-center items-center rounded-[8px]\" style=\"background-color:#4F44F0; color:#FFFFFF\">전송</button>\n        </div>\n        <div v-if=\"isSend\">\n          <div class=\"flex flex-row w-full gap-[10px]\">\n            <input type=\"text\" v-model=\"code\" placeholder=\"인증번호\" class=\"text-[20px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"sm:text-[10px] border: 1px solid #CECECE;\">\n            <button type=\"button\" @click=\"Verifit()\" class=\"flex w-[60px] justify-center items-center rounded-[8px]\" style=\"background-color:#4F44F0; color:#FFFFFF\">인증</button>\n          </div>\n        </div>\n        <div class=\"font-semibold\">전화번호</div>\n        <input type=\"number\" v-model=\"phone\" maxlength=\"13\" placeholder=\"-를 빼고 입력해주세요\" class=\"text-[20px] md:text-[14px] sm:text-[10px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\" required>\n        <div class=\"font-semibold\">아이디</div>\n        <input type=\"text\" v-model=\"identity\" maxlength=\"16\" placeholder=\"16글자 이하로 작성\" class=\"text-[20px] md:text-[14px] sm:text-[10px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\" required>\n        <div class=\"font-semibold\">비밀번호</div>\n        <input type=\"password\" v-model=\"password\" maxlength=\"16\" placeholder=\"16글자 이하로 작성\" class=\"text-[20px] md:text-[14px] sm:text-[10px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\" required>\n      </div>\n      <div class=\"flex justify-center rounded-[8px] mb-[30px]\" style=\"background-color:#4F44F0;\">\n        <button type=\"submit\" v-if=\"isRigist\" class=\"font-semibold px-[20px] py-[15px]\" style=\"color:#FFFFFF\">가입하기</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      identity: '',\n      phone: '',\n      password: '',\n      isSend: false,\n      isRigist: false,\n      isReadonly: false,\n      code: '',\n      verificationCode: '',\n    };\n  },\n  methods: {\n    register() {\n      axios.post('http://127.0.0.1:8000/register', {\n        name: this.name,\n        email: this.email,\n        phone: this.phone,\n        identity: this.identity,\n        password: this.password,\n      })\n      .then(response => {\n        console.log(response.data);\n        alert(\"회원가입이 성공적으로 이루어졌습니다.\\n로그인페이지로 이동합니다.\");\n        this.$router.push('/login');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n    },\n    Send() {\n    axios.post('http://127.0.0.1:8000/mailSubmit', {\n      email: this.email,\n    })\n    .then(response => {\n      console.log(response.data.message);\n      this.verificationCode = response.data.verification_code;\n      this.isSend = true;\n    })\n    .catch(error => {\n      console.error(error);\n      alert(\"정확한 이메일을 입력해 주세요\");\n    });\n  },\n  Verifit() {\n    if(this.code==this.verificationCode){\n      alert(\"이메일 인증이 성공적으로 완료되었습니다.\");\n      this.isSend = false;\n      this.isRigist = true;\n      this.isReadonly = true;\n    }\n    else{\n      alert(\"인증번호가 틀렸습니다.\");\n    }\n  }\n  }\n};\n</script>\n"],"mappings":";AAoCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,KAAK;MACjBC,IAAI,EAAE,EAAE;MACRC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACTb,KAAK,CAACc,IAAI,CAAC,gCAAgC,EAAE;QAC3CZ,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBE,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBD,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBE,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC,EACAS,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACf,IAAI,CAAC;QAC1BkB,KAAK,CAAC,sCAAsC,CAAC;QAC7C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC;IACDC,IAAIA,CAAA,EAAG;MACPxB,KAAK,CAACc,IAAI,CAAC,kCAAkC,EAAE;QAC7CX,KAAK,EAAE,IAAI,CAACA;MACd,CAAC,EACAY,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACf,IAAI,CAACwB,OAAO,CAAC;QAClC,IAAI,CAACd,gBAAe,GAAIK,QAAQ,CAACf,IAAI,CAACyB,iBAAiB;QACvD,IAAI,CAACnB,MAAK,GAAI,IAAI;MACpB,CAAC,EACAe,KAAK,CAACC,KAAI,IAAK;QACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;QACpBJ,KAAK,CAAC,kBAAkB,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC;IACDQ,OAAOA,CAAA,EAAG;MACR,IAAG,IAAI,CAACjB,IAAI,IAAE,IAAI,CAACC,gBAAgB,EAAC;QAClCQ,KAAK,CAAC,wBAAwB,CAAC;QAC/B,IAAI,CAACZ,MAAK,GAAI,KAAK;QACnB,IAAI,CAACC,QAAO,GAAI,IAAI;QACpB,IAAI,CAACC,UAAS,GAAI,IAAI;MACxB,OACI;QACFU,KAAK,CAAC,cAAc,CAAC;MACvB;IACF;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}