{"ast":null,"code":"import TossPayments from '@tosspayments/payment-sdk';\nexport default {\n  data() {\n    return {\n      couponApplied: false,\n      amount: 50000,\n      clientKey: 'test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm',\n      customerKey: '3blrC04giS82FlXAEiVeP',\n      tossPayments: null,\n      widgets: null\n    };\n  },\n  mounted() {\n    this.initializeTossPayments();\n  },\n  methods: {\n    async initializeTossPayments() {\n      // Toss Payments 초기화\n      this.tossPayments = TossPayments(this.clientKey);\n\n      // 회원 결제 설정\n      this.widgets = this.tossPayments.widgets({\n        customerKey: this.customerKey\n      });\n\n      // 주문의 결제 금액 설정\n      await this.widgets.setAmount({\n        currency: 'KRW',\n        value: this.amount\n      });\n\n      // 결제 UI 및 이용약관 UI 렌더링\n      await Promise.all([this.renderPaymentMethods(), this.renderAgreement()]);\n    },\n    async renderPaymentMethods() {\n      await this.widgets.renderPaymentMethods({\n        selector: this.$refs.paymentMethod,\n        variantKey: 'DEFAULT'\n      });\n    },\n    async renderAgreement() {\n      await this.widgets.renderAgreement({\n        selector: this.$refs.agreement,\n        variantKey: 'AGREEMENT'\n      });\n    },\n    async applyCoupon() {\n      if (this.couponApplied) {\n        await this.widgets.setAmount({\n          currency: 'KRW',\n          value: this.amount + 5000\n        });\n      } else {\n        await this.widgets.setAmount({\n          currency: 'KRW',\n          value: this.amount - 5000\n        });\n      }\n      this.couponApplied = !this.couponApplied;\n    },\n    async processPayment() {\n      try {\n        await this.widgets.requestPayment({\n          orderId: '7P02U-Rya0kPedd712sSV',\n          orderName: '토스 티셔츠 외 2건',\n          successUrl: `${window.location.origin}/success.html`,\n          failUrl: `${window.location.origin}/fail.html`,\n          customerEmail: 'customer123@gmail.com',\n          customerName: '김토스',\n          customerMobilePhone: '01012341234'\n        });\n      } catch (error) {\n        console.error('결제 요청 중 오류 발생:', error);\n        // 오류 처리 로직 추가: 예를 들어, 사용자에게 오류 메시지를 표시하는 등\n      }\n    }\n  }\n};","map":{"version":3,"names":["TossPayments","data","couponApplied","amount","clientKey","customerKey","tossPayments","widgets","mounted","initializeTossPayments","methods","setAmount","currency","value","Promise","all","renderPaymentMethods","renderAgreement","selector","$refs","paymentMethod","variantKey","agreement","applyCoupon","processPayment","requestPayment","orderId","orderName","successUrl","window","location","origin","failUrl","customerEmail","customerName","customerMobilePhone","error","console"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/toss/TossCheck.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 할인 쿠폰 -->\n    <div>\n      <input type=\"checkbox\" id=\"coupon-box\" @change=\"applyCoupon\" />\n      <label for=\"coupon-box\"> 5,000원 쿠폰 적용 </label>\n    </div>\n    <!-- 결제 UI -->\n    <div ref=\"paymentMethod\"></div>\n    <!-- 이용약관 UI -->\n    <div ref=\"agreement\"></div>\n    <!-- 결제하기 버튼 -->\n    <button class=\"button\" @click=\"processPayment\" style=\"margin-top: 30px\">결제하기</button>\n  </div>\n</template>\n\n<script>\nimport TossPayments from '@tosspayments/payment-sdk';\n\nexport default {\n  data() {\n    return {\n      couponApplied: false,\n      amount: 50000,\n      clientKey: 'test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm',\n      customerKey: '3blrC04giS82FlXAEiVeP',\n      tossPayments: null,\n      widgets: null\n    };\n  },\n  mounted() {\n    this.initializeTossPayments();\n  },\n  methods: {\n    async initializeTossPayments() {\n      // Toss Payments 초기화\n      this.tossPayments = TossPayments(this.clientKey);\n      \n      // 회원 결제 설정\n      this.widgets = this.tossPayments.widgets({ customerKey: this.customerKey });\n      \n      // 주문의 결제 금액 설정\n      await this.widgets.setAmount({\n        currency: 'KRW',\n        value: this.amount\n      });\n\n      // 결제 UI 및 이용약관 UI 렌더링\n      await Promise.all([\n        this.renderPaymentMethods(),\n        this.renderAgreement()\n      ]);\n    },\n    async renderPaymentMethods() {\n      await this.widgets.renderPaymentMethods({\n        selector: this.$refs.paymentMethod,\n        variantKey: 'DEFAULT'\n      });\n    },\n    async renderAgreement() {\n      await this.widgets.renderAgreement({\n        selector: this.$refs.agreement,\n        variantKey: 'AGREEMENT'\n      });\n    },\n    async applyCoupon() {\n      if (this.couponApplied) {\n        await this.widgets.setAmount({\n          currency: 'KRW',\n          value: this.amount + 5000\n        });\n      } else {\n        await this.widgets.setAmount({\n          currency: 'KRW',\n          value: this.amount - 5000\n        });\n      }\n      this.couponApplied = !this.couponApplied;\n    },\n    async processPayment() {\n      try {\n        await this.widgets.requestPayment({\n          orderId: '7P02U-Rya0kPedd712sSV',\n          orderName: '토스 티셔츠 외 2건',\n          successUrl: `${window.location.origin}/success.html`,\n          failUrl: `${window.location.origin}/fail.html`,\n          customerEmail: 'customer123@gmail.com',\n          customerName: '김토스',\n          customerMobilePhone: '01012341234'\n        });\n      } catch (error) {\n        console.error('결제 요청 중 오류 발생:', error);\n        // 오류 처리 로직 추가: 예를 들어, 사용자에게 오류 메시지를 표시하는 등\n      }\n    }\n  }\n};\n</script>\n\n<style>\n/* 필요한 스타일링 추가 */\n</style>\n"],"mappings":"AAiBA,OAAOA,YAAW,MAAO,2BAA2B;AAEpD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,MAAM,EAAE,KAAK;MACbC,SAAS,EAAE,wCAAwC;MACnDC,WAAW,EAAE,uBAAuB;MACpCC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,sBAAsB,CAAC,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,sBAAsBA,CAAA,EAAG;MAC7B;MACA,IAAI,CAACH,YAAW,GAAIN,YAAY,CAAC,IAAI,CAACI,SAAS,CAAC;;MAEhD;MACA,IAAI,CAACG,OAAM,GAAI,IAAI,CAACD,YAAY,CAACC,OAAO,CAAC;QAAEF,WAAW,EAAE,IAAI,CAACA;MAAY,CAAC,CAAC;;MAE3E;MACA,MAAM,IAAI,CAACE,OAAO,CAACI,SAAS,CAAC;QAC3BC,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE,IAAI,CAACV;MACd,CAAC,CAAC;;MAEF;MACA,MAAMW,OAAO,CAACC,GAAG,CAAC,CAChB,IAAI,CAACC,oBAAoB,CAAC,CAAC,EAC3B,IAAI,CAACC,eAAe,CAAC,EACtB,CAAC;IACJ,CAAC;IACD,MAAMD,oBAAoBA,CAAA,EAAG;MAC3B,MAAM,IAAI,CAACT,OAAO,CAACS,oBAAoB,CAAC;QACtCE,QAAQ,EAAE,IAAI,CAACC,KAAK,CAACC,aAAa;QAClCC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC;IACD,MAAMJ,eAAeA,CAAA,EAAG;MACtB,MAAM,IAAI,CAACV,OAAO,CAACU,eAAe,CAAC;QACjCC,QAAQ,EAAE,IAAI,CAACC,KAAK,CAACG,SAAS;QAC9BD,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC;IACD,MAAME,WAAWA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACrB,aAAa,EAAE;QACtB,MAAM,IAAI,CAACK,OAAO,CAACI,SAAS,CAAC;UAC3BC,QAAQ,EAAE,KAAK;UACfC,KAAK,EAAE,IAAI,CAACV,MAAK,GAAI;QACvB,CAAC,CAAC;MACJ,OAAO;QACL,MAAM,IAAI,CAACI,OAAO,CAACI,SAAS,CAAC;UAC3BC,QAAQ,EAAE,KAAK;UACfC,KAAK,EAAE,IAAI,CAACV,MAAK,GAAI;QACvB,CAAC,CAAC;MACJ;MACA,IAAI,CAACD,aAAY,GAAI,CAAC,IAAI,CAACA,aAAa;IAC1C,CAAC;IACD,MAAMsB,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAM,IAAI,CAACjB,OAAO,CAACkB,cAAc,CAAC;UAChCC,OAAO,EAAE,uBAAuB;UAChCC,SAAS,EAAE,aAAa;UACxBC,UAAU,EAAE,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,eAAe;UACpDC,OAAO,EAAE,GAAGH,MAAM,CAACC,QAAQ,CAACC,MAAM,YAAY;UAC9CE,aAAa,EAAE,uBAAuB;UACtCC,YAAY,EAAE,KAAK;UACnBC,mBAAmB,EAAE;QACvB,CAAC,CAAC;MACJ,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtC;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}