{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      users: [],\n      loading: true,\n      error: null,\n      name: '',\n      uname: '',\n      uid: '',\n      upw: '',\n      uemail: '',\n      ucreate: ''\n    };\n  },\n  mounted() {\n    let name = sessionStorage.getItem(\"name\");\n    let email = sessionStorage.getItem(\"email\");\n    this.name = name;\n    this.email = email;\n    this.fetchCredits();\n  },\n  methods: {\n    async fetchCredits() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/userinfo', {\n          email: this.email\n        });\n        this.users = response.data.data;\n        this.uname = this.users.map(user => user.name).join(\",\");\n        this.uid = this.users.map(user => user.identity).join(\",\");\n        this.upw = \"******\";\n        this.uemail = this.users.map(user => user.email).join(\",\");\n        this.ucreate = this.users.map(user => user.created_at.substring(0, 10)).join(\",\");\n        console.log(this.users);\n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information';\n        this.loading = false;\n      }\n    },\n    remvoe() {\n      axios.post('http://127.0.0.1:8000/remove', {\n        identity: this.newid,\n        email: this.email\n      }).then(response => {\n        const user = response.data.data;\n        console.log(user);\n        alert(\"아이디가 변경되었습니다.\\n다시 로그인해주세요\");\n        sessionStorage.clear();\n        window.location.href = '/';\n      }).catch(error => {\n        if (error.response && error.response.status === 404) {\n          this.errorMessage = '입력한 정보를 다시 확인해주세요.';\n        } else if (error.response && error.response.status === 422) {\n          this.errorMessage = '유효성 검사 오류: 입력한 정보를 다시 확인해주세요.';\n        } else {\n          this.errorMessage = '서버 에러가 발생했습니다. 나중에 다시 시도해주세요.';\n        }\n        console.error(error);\n      });\n    },\n    change() {\n      window.location.href = '/userpage2';\n    }\n  }\n};","map":{"version":3,"names":["axios","data","users","loading","error","name","uname","uid","upw","uemail","ucreate","mounted","sessionStorage","getItem","email","fetchCredits","methods","response","post","map","user","join","identity","created_at","substring","console","log","message","remvoe","newid","then","alert","clear","window","location","href","catch","status","errorMessage","change"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/UserIn.vue"],"sourcesContent":["<template>\n<div class=\"w-full px-[30%] py-[10%]\" style=\"background-color:#FFFFF\">\n    <div class=\"flex w-full flex-col items-center justify-center\">\n      <!-- 배너 이미지-->\n      <img src=\"@/assets/sendgo/logo.svg\" class=\"w-[300px] lg:w-[250px] md:w-[200px] sm:w-[150px] h-auto mb-[40px] lg:mb-[30px] md:mb-[20px] sm:mb-[20px]\">\n    </div>\n    <div class=\"flex justify-center mb-[50px] text-[45px] font-bold\">회원님의 정보</div>\n    <div class=\"flex flex-row mb-[50px] text-[32px] border-t\" style=\"border-color:#0000002E\">\n      <div class=\"flex-col w-[220px] font-semibold\" style=\"background-color:#F0F0F0\">\n        <div class=\"flex px-[20px] py-[10px] border-b\" style=\"border-color:#0000002E\">이름</div>\n        <div class=\"flex px-[20px] py-[10px] border-b\" style=\"border-color:#0000002E\">아이디</div>\n        <div class=\"flex px-[20px] py-[10px] border-b\" style=\"border-color:#0000002E\">비밀번호</div>\n        <div class=\"flex px-[20px] py-[10px] border-b\" style=\"border-color:#0000002E\">이메일</div>\n        <div class=\"flex px-[20px] py-[10px] border-b\" style=\"border-color:#0000002E\">가입날짜</div>\n      </div>\n      <div class=\"flex-1 flex-col \">\n        <div class=\"flex px-[20px] py-[10px] border-b \" style=\"border-color:#0000002E\">{{uname}}</div>\n        <div class=\"flex px-[20px] py-[10px] border-b \" style=\"border-color:#0000002E\">{{uid}}</div>\n        <div class=\"flex px-[20px] py-[10px] border-b \" style=\"border-color:#0000002E\">{{upw}}</div>\n        <div class=\"flex px-[20px] py-[10px] border-b \" style=\"border-color:#0000002E\">{{uemail}}</div>\n        <div class=\"flex px-[20px] py-[10px] border-b \" style=\"border-color:#0000002E\">{{ucreate}}</div>\n      </div>\n  </div>\n  <div class=\"flex flex-row justify-center gap-[40px]\">\n    <button @click=\"change()\" class=\"text-[20px] px-[20px] py-[20px] font-semibold rounded-[8px]\" style=\"background-color:#4E81FF; color:#FFFFFF\">정보 변경</button>\n    <button @click=\"remove()\" class=\"text-[20px] px-[20px] py-[20px] font-semibold rounded-[8px]\" style=\"background-color:#4E81FF; color:#FFFFFF\">회원 탈퇴</button>\n  </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      users: [],\n      loading: true,\n      error: null,\n      name: '',\n      uname: '',\n      uid: '',\n      upw: '',\n      uemail: '',\n      ucreate: '',\n    };\n  },\n  mounted() {\n    let name = sessionStorage.getItem(\"name\");\n    let email = sessionStorage.getItem(\"email\");\n    this.name = name;\n    this.email = email;\n    this.fetchCredits();\n  },\n  methods: {\n    async fetchCredits() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/userinfo', {\n          email: this.email,\n        });\n        this.users = response.data.data;\n        this.uname = this.users.map(user=> user.name).join(\",\");\n        this.uid = this.users.map(user=> user.identity).join(\",\");\n        this.upw = \"******\";\n        this.uemail = this.users.map(user=> user.email).join(\",\");\n        this.ucreate = this.users.map(user=> user.created_at.substring(0, 10)).join(\",\");\n        console.log(this.users);\n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information'; \n        this.loading = false;\n      }\n    },\n    remvoe(){\n      axios.post('http://127.0.0.1:8000/remove', {\n        identity: this.newid,\n        email : this.email,\n      })\n      .then(response => {\n        const user = response.data.data;\n        console.log(user);\n        alert(\"아이디가 변경되었습니다.\\n다시 로그인해주세요\")\n        sessionStorage.clear();\n        window.location.href ='/';\n      })\n      .catch(error => {\n        if (error.response && error.response.status === 404) {\n          this.errorMessage = '입력한 정보를 다시 확인해주세요.';\n        } else if (error.response && error.response.status === 422) {\n          this.errorMessage = '유효성 검사 오류: 입력한 정보를 다시 확인해주세요.';\n        } else {\n          this.errorMessage = '서버 에러가 발생했습니다. 나중에 다시 시도해주세요.';\n        }\n        console.error(error);\n      });\n    },\n    change(){\n      window.location.href='/userpage2';\n    }\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}