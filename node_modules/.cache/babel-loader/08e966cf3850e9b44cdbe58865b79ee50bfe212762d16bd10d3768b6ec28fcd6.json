{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      identity: '',\n      password: ''\n    };\n  },\n  methods: {\n    login() {\n      axios.post('http://127.0.0.1:8000/login', {\n        identity: this.identity,\n        password: this.password\n      }).then(response => {\n        const {\n          name,\n          email,\n          profile_image\n        } = response.data.user;\n        const userprofile = profile_image || 'a';\n        sessionStorage.setItem(\"logg\", true);\n        sessionStorage.setItem('name', name);\n        sessionStorage.setItem('email', email);\n        sessionStorage.setItem('profile', userprofile);\n        window.location.href = '/message';\n      }).catch(error => {\n        console.error(error);\n        alert(\"아이디 혹은 비밀번호가 틀렸습니다.\");\n      });\n    },\n    Sid() {\n      window.location.href = '/searchL';\n    },\n    Spw() {\n      window.location.href = '/searchP';\n    },\n    kakaoLogin() {\n      window.Kakao.Auth.login({\n        scope: \"profile_image, account_email\",\n        success: this.getKakaoAccount,\n        fail: error => {\n          console.log(\"카카오 로그인 실패:\", error);\n          alert(\"카카오 로그인에 실패했습니다.\");\n        }\n      });\n    },\n    getKakaoAccount() {\n      window.Kakao.API.request({\n        url: \"/v2/user/me\",\n        success: res => {\n          const kakao_account = res.kakao_account;\n          const nickname = kakao_account.profile.nickname;\n          const email = kakao_account.email;\n          console.log(\"nickname\", nickname);\n          console.log(\"email\", email);\n\n          // 로그인 성공 후 팝업 처리 (페이지 리디렉션 없이)\n          alert(\"카카오 로그인 성공!\\n닉네임: \" + nickname + \"\\n이메일: \" + email);\n        },\n        fail: error => {\n          console.log(\"API 요청 실패:\", error);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","identity","password","methods","login","post","then","response","name","email","profile_image","user","userprofile","sessionStorage","setItem","window","location","href","catch","error","console","alert","Sid","Spw","kakaoLogin","Kakao","Auth","scope","success","getKakaoAccount","fail","log","API","request","url","res","kakao_account","nickname","profile"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/user/LoginFrom.vue"],"sourcesContent":["<template>\n  <div class=\"w-full px-[30%] py-[10%]\" style=\"background-color:#FFFFF\">\n    <form @submit.prevent=\"login\">\n      <div class=\"flex w-full flex-col items-center justify-center\">\n        <!-- 배너 이미지 -->\n        <img src=\"@/assets/sendgo/logo.svg\" class=\"w-[300px] lg:w-[250px] md:w-[200px] sm:w-[150px] h-auto mb-[80px] lg:mb-[60px] md:mb-[50px] sm:mb-[40px]\">\n      </div>\n      <div class=\"flex flex-col mb-[20px] sm:mb-[10px] items-start gap-[20px] sm:gap-[10px]\">\n        <!-- 로그인 폼 -->\n        <input type=\"text\" v-model=\"identity\" placeholder=\"아이디\" class=\"text-[20px] sm:text-[14px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\">\n        <input type=\"password\" v-model=\"password\" placeholder=\"비밀번호\" class=\"text-[20px] sm:text-[14px] w-full pl-[10px] py-[5px] rounded-[8px]\" style=\"border: 1px solid #CECECE;\">\n      </div>\n      <!-- 아이디 비번 찾기 -->\n      <div class=\"flex flex-row justify-end gap-[10px] mb-[20px]\">\n        <div @click=\"Sid\" class=\"text-[15px] cursor-pointer\">아이디 찾기</div>\n        <div class=\"text-[15px]\">|</div>\n        <div @click=\"Spw\" class=\"text-[15px] cursor-pointer\">비밀번호 찾기</div>\n      </div>\n      <div class=\"flex justify-center rounded-[8px] mb-[30px] sm:mb-[20px]\" style=\"background-color:#4F44F0;\">\n        <button type=\"submit\" class=\"font-semibold px-[20px] py-[15px] sm:text-[14px] sm:py-[10px]\" style=\"color:#FFFFFF\">로그인</button>\n      </div>\n      <a id=\"custom-login-btn\" @click=\"kakaoLogin()\">\n      <img\n        src=\"https://k.kakaocdn.net/14/dn/btroDszwNrM/I6efHub1SN5KCJqLm1Ovx1/o.jpg\"\n        width=\"222\"\n        alt=\"카카오 로그인 버튼\"\n      />\n    </a>\n      <div class=\"flex justify-center sm:text-[10px]\">\n        계정이 없으신가요?&nbsp;<router-link to=\"/register\" class=\"font-semibold border-b\" style=\"color:#4F44F0; border-color:#4F44F0;\">회원가입하기</router-link>\n      </div>\n    </form>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      identity: '',\n      password: '',\n    };\n  },\n  methods: {\n    login() {\n      axios.post('http://127.0.0.1:8000/login', {\n        identity: this.identity,\n        password: this.password,\n      })\n      .then(response => {\n        const { name, email, profile_image } = response.data.user;\n        const userprofile = profile_image || 'a';\n        sessionStorage.setItem(\"logg\", true);\n        sessionStorage.setItem('name', name);\n        sessionStorage.setItem('email', email);\n        sessionStorage.setItem('profile', userprofile);\n        window.location.href ='/message';\n      })\n      .catch(error => {\n        console.error(error);\n        alert(\"아이디 혹은 비밀번호가 틀렸습니다.\");\n      });\n    },\n    Sid() {\n      window.location.href = '/searchL';\n    },\n    Spw() {\n      window.location.href = '/searchP';\n    },\n    kakaoLogin() {\n    window.Kakao.Auth.login({\n      scope: \"profile_image, account_email\",\n      success: this.getKakaoAccount,\n      fail: (error) => {\n        console.log(\"카카오 로그인 실패:\", error);\n        alert(\"카카오 로그인에 실패했습니다.\");\n      }\n    });\n  },\n  getKakaoAccount() {\n    window.Kakao.API.request({\n      url: \"/v2/user/me\",\n      success: (res) => {\n        const kakao_account = res.kakao_account;\n        const nickname = kakao_account.profile.nickname;\n        const email = kakao_account.email;\n        console.log(\"nickname\", nickname);\n        console.log(\"email\", email);\n\n        // 로그인 성공 후 팝업 처리 (페이지 리디렉션 없이)\n        alert(\"카카오 로그인 성공!\\n닉네임: \" + nickname + \"\\n이메일: \" + email);\n      },\n      fail: (error) => {\n        console.log(\"API 요청 실패:\", error);\n      },\n    });\n  },\n  }\n};\n</script>\n"],"mappings":"AAqCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACNL,KAAK,CAACM,IAAI,CAAC,6BAA6B,EAAE;QACxCJ,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC,EACAI,IAAI,CAACC,QAAO,IAAK;QAChB,MAAM;UAAEC,IAAI;UAAEC,KAAK;UAAEC;QAAc,IAAIH,QAAQ,CAACP,IAAI,CAACW,IAAI;QACzD,MAAMC,WAAU,GAAIF,aAAY,IAAK,GAAG;QACxCG,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;QACpCD,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAAC;QACpCK,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;QACtCI,cAAc,CAACC,OAAO,CAAC,SAAS,EAAEF,WAAW,CAAC;QAC9CG,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAG,UAAU;MAClC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBE,KAAK,CAAC,qBAAqB,CAAC;MAC9B,CAAC,CAAC;IACJ,CAAC;IACDC,GAAGA,CAAA,EAAG;MACJP,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,UAAU;IACnC,CAAC;IACDM,GAAGA,CAAA,EAAG;MACJR,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,UAAU;IACnC,CAAC;IACDO,UAAUA,CAAA,EAAG;MACbT,MAAM,CAACU,KAAK,CAACC,IAAI,CAACtB,KAAK,CAAC;QACtBuB,KAAK,EAAE,8BAA8B;QACrCC,OAAO,EAAE,IAAI,CAACC,eAAe;QAC7BC,IAAI,EAAGX,KAAK,IAAK;UACfC,OAAO,CAACW,GAAG,CAAC,aAAa,EAAEZ,KAAK,CAAC;UACjCE,KAAK,CAAC,kBAAkB,CAAC;QAC3B;MACF,CAAC,CAAC;IACJ,CAAC;IACDQ,eAAeA,CAAA,EAAG;MAChBd,MAAM,CAACU,KAAK,CAACO,GAAG,CAACC,OAAO,CAAC;QACvBC,GAAG,EAAE,aAAa;QAClBN,OAAO,EAAGO,GAAG,IAAK;UAChB,MAAMC,aAAY,GAAID,GAAG,CAACC,aAAa;UACvC,MAAMC,QAAO,GAAID,aAAa,CAACE,OAAO,CAACD,QAAQ;UAC/C,MAAM5B,KAAI,GAAI2B,aAAa,CAAC3B,KAAK;UACjCW,OAAO,CAACW,GAAG,CAAC,UAAU,EAAEM,QAAQ,CAAC;UACjCjB,OAAO,CAACW,GAAG,CAAC,OAAO,EAAEtB,KAAK,CAAC;;UAE3B;UACAY,KAAK,CAAC,oBAAmB,GAAIgB,QAAO,GAAI,SAAQ,GAAI5B,KAAK,CAAC;QAC5D,CAAC;QACDqB,IAAI,EAAGX,KAAK,IAAK;UACfC,OAAO,CAACW,GAAG,CAAC,YAAY,EAAEZ,KAAK,CAAC;QAClC;MACF,CAAC,CAAC;IACJ;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}