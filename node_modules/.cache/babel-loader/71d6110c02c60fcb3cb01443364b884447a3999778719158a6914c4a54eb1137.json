{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"coupon-box\"\n}, \" 5,000원 쿠폰 적용 \", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  ref: \"paymentMethod\"\n};\nconst _hoisted_3 = {\n  ref: \"agreement\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"coupon-box\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.applyCoupon && $options.applyCoupon(...args))\n  }, null, 32 /* NEED_HYDRATION */), _hoisted_1]), _createCommentVNode(\" 결제 UI, 이용약관 UI 영역 \"), _createElementVNode(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */), _createCommentVNode(\" 결제하기 버튼 \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.processPayment && $options.processPayment(...args))\n  }, \"결제하기\")]);\n}","map":{"version":3,"names":["_createElementVNode","for","ref","_createElementBlock","type","id","onChange","_cache","args","$options","applyCoupon","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","onClick","processPayment"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/toss/TossCheck.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <input type=\"checkbox\" id=\"coupon-box\" @change=\"applyCoupon\" />\n      <label for=\"coupon-box\"> 5,000원 쿠폰 적용 </label>\n    </div>\n    <!-- 결제 UI, 이용약관 UI 영역 -->\n    <div ref=\"paymentMethod\"></div>\n    <div ref=\"agreement\"></div>\n    <!-- 결제하기 버튼 -->\n    <button @click=\"processPayment\">결제하기</button>\n  </div>\n</template>\n\n<script>\nimport PaymentWidget from '@tosspayments/payment-sdk'\n\nexport default {\n  data() {\n    return {\n      couponApplied: false,\n      amount: 50000,\n      widgetClientKey: \"test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm\",\n      customerKey: \"1rNzb3iHa8gPgRkLABTcJ\",\n      paymentWidget: null,\n      paymentMethodWidget: null\n    };\n  },\n  mounted() {\n    this.paymentWidget = PaymentWidget(this.widgetClientKey, this.customerKey);\n    this.renderPaymentMethods();\n    this.renderAgreement();\n  },\n  methods: {\n    renderPaymentMethods() {\n      this.paymentMethodWidget = this.paymentWidget.renderPaymentMethods(\n        this.$refs.paymentMethod,\n        { value: this.amount },\n        { variantKey: \"DEFAULT\" }\n      );\n    },\n    renderAgreement() {\n      this.paymentWidget.renderAgreement(this.$refs.agreement, { variantKey: \"AGREEMENT\" });\n    },\n    applyCoupon() {\n      if (this.couponApplied) {\n        this.paymentMethodWidget.updateAmount(this.amount);\n      } else {\n        this.paymentMethodWidget.updateAmount(this.amount - 5000);\n      }\n      this.couponApplied = !this.couponApplied;\n    },\n    processPayment() {\n      // 결제를 요청하기 전에 orderId, amount를 서버에 저장하는 것을 고려해야 합니다.\n      // 예시로 주어진 값들은 실제 서버에서 처리할 수 있는 형태로 변경해야 합니다.\n      this.paymentWidget.requestPayment({\n        orderId: \"zSpkmBCED-aslEKg0n72-\",\n        orderName: \"토스 티셔츠 외 2건\",\n        successUrl: window.location.origin + \"/success\",\n        failUrl: window.location.origin + \"/fail\",\n        customerEmail: \"customer123@gmail.com\",\n        customerName: \"김토스\",\n        customerMobilePhone: \"01012341234\"\n      });\n    }\n  }\n};\n</script>\n"],"mappings":";gCAIMA,mBAAA,CAA8C;EAAvCC,GAAG,EAAC;AAAY,GAAC,gBAAc;;EAGnCC,GAAG,EAAC;AAAe;;EACnBA,GAAG,EAAC;AAAW;;uBAPtBC,mBAAA,CAUM,cATJH,mBAAA,CAGM,cAFJA,mBAAA,CAA+D;IAAxDI,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,YAAY;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;qCAC3DG,UAA8C,C,GAEhDC,mBAAA,uBAA0B,EAC1BZ,mBAAA,CAA+B,OAA/Ba,UAA+B,+BAC/Bb,mBAAA,CAA2B,OAA3Bc,UAA2B,+BAC3BF,mBAAA,aAAgB,EAChBZ,mBAAA,CAA6C;IAApCe,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAO,cAAA,IAAAP,QAAA,CAAAO,cAAA,IAAAR,IAAA,CAAc;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}