{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7cad3e82\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"flex flex-col items-center justify-center px-[12.5%] pt-[109px] pb-[200px]\",\n  style: {\n    \"background-color\": \"#F2F4F8\"\n  }\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"\n};\nconst _hoisted_6 = {\n  class: \"text-lg font-semibold\"\n};\nconst _hoisted_7 = {\n  class: \"text-sm text-gray-600\"\n};\nconst _hoisted_8 = {\n  class: \"text-sm text-gray-600\"\n};\nconst _hoisted_9 = {\n  key: 1\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"No credit information found for this user.\", -1 /* HOISTED */));\nconst _hoisted_11 = [_hoisted_10];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [$data.credits.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.credits, credit => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: credit.id,\n      class: \"conbox bg-white shadow-lg p-4 border rounded-lg\"\n    }, [_createElementVNode(\"p\", _hoisted_6, \"Amount: \" + _toDisplayString(credit.amount), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, \"Order Name: \" + _toDisplayString(credit.order_name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, \"Customer Name: \" + _toDisplayString(credit.customer_name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [..._hoisted_11]))]))]);\n}","map":{"version":3,"names":["class","style","key","_createElementVNode","_hoisted_10","_createElementBlock","_hoisted_1","$data","loading","_hoisted_2","_hoisted_3","credits","length","_hoisted_4","_hoisted_5","_Fragment","_renderList","credit","id","_hoisted_6","_toDisplayString","amount","_hoisted_7","order_name","_hoisted_8","customer_name","_hoisted_9","_hoisted_11"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/credit/CreditContent3.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-center justify-center px-[12.5%] pt-[109px] pb-[200px]\" style=\"background-color: #F2F4F8\">\n    <div v-if=\"loading\">Loading...</div>\n    <div v-else>\n      <div v-if=\"credits.length\">\n  <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n    <div v-for=\"credit in credits\" :key=\"credit.id\" class=\"conbox bg-white shadow-lg p-4 border rounded-lg\">\n      <p class=\"text-lg font-semibold\">Amount: {{ credit.amount }}</p>\n      <p class=\"text-sm text-gray-600\">Order Name: {{ credit.order_name }}</p>\n      <p class=\"text-sm text-gray-600\">Customer Name: {{ credit.customer_name }}</p>\n    </div>\n  </div>\n</div>\n\n      <div v-else>\n        <p>No credit information found for this user.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'CreditContent3',\n  data() {\n    return {\n      credits: [],\n      loading: true,\n      error: null,\n      customerName: '' // 여기에 원하는 유저네임을 설정하세요.\n    };\n  },\n  mounted() {\n    let name = sessionStorage.getItem(\"name\");\n    console.log(name);\n    this.customerName = name;\n    this.fetchCredits();\n  },\n  methods: {\n    async fetchCredits() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/datab', {\n          customerName: this.customerName,\n        });\n        console.log(response.data);\n        // Vue.js에서는 데이터 속성을 직접 수정합니다.\n        this.credits = response.data.data;\n        this.loading = false; // 데이터 로딩이 완료되었으므로 로딩 상태를 false로 설정\n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information'; // 에러 메시지를 설정\n        this.loading = false; // 데이터 로딩 중 에러가 발생했으므로 로딩 상태를 false로 설정\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n@media (max-width: 768px) {\n  .conbox {\n    margin-left: 0px;\n    width: 100%;\n    overflow-x: scroll;\n    overflow: auto;\n    white-space: nowrap;\n  }\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC,4EAA4E;EAACC,KAAiC,EAAjC;IAAA;EAAA;;;EAD1FC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAKOF,KAAK,EAAC;AAAqE;;EAEzEA,KAAK,EAAC;AAAuB;;EAC7BA,KAAK,EAAC;AAAuB;;EAC7BA,KAAK,EAAC;AAAuB;;EATtCE,GAAA;AAAA;iEAeQC,mBAAA,CAAiD,WAA9C,4CAA0C;qBAA7CC,WAAiD,C;;uBAdvDC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBOC,KAAA,CAAAC,OAAO,I,cAAlBH,mBAAA,CAAoC,OAFxCI,UAAA,EAEwB,YAAU,M,cAC9BJ,mBAAA,CAcM,OAjBVK,UAAA,GAIiBH,KAAA,CAAAI,OAAO,CAACC,MAAM,I,cAAzBP,mBAAA,CAQA,OAZNQ,UAAA,GAKEV,mBAAA,CAMM,OANNW,UAMM,I,kBALJT,mBAAA,CAIMU,SAAA,QAVVC,WAAA,CAM0BT,KAAA,CAAAI,OAAO,EAAjBM,MAAM;yBAAlBZ,mBAAA,CAIM;MAJ0BH,GAAG,EAAEe,MAAM,CAACC,EAAE;MAAElB,KAAK,EAAC;QACpDG,mBAAA,CAAgE,KAAhEgB,UAAgE,EAA/B,UAAQ,GAAAC,gBAAA,CAAGH,MAAM,CAACI,MAAM,kBACzDlB,mBAAA,CAAwE,KAAxEmB,UAAwE,EAAvC,cAAY,GAAAF,gBAAA,CAAGH,MAAM,CAACM,UAAU,kBACjEpB,mBAAA,CAA8E,KAA9EqB,UAA8E,EAA7C,iBAAe,GAAAJ,gBAAA,CAAGH,MAAM,CAACQ,aAAa,iB;uDAKvEpB,mBAAA,CAEM,OAhBZqB,UAAA,MAAAC,WAAA,I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}