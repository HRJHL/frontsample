{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-50c50504\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"flex flex-col items-center justify-center px-[12.5%] pt-[109px] pb-[200px]\",\n  style: {\n    \"background-color\": \"#F2F4F8\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"mb-[50px] text-[45px] sm:text-[30px] font-bold\"\n}, \"문의사항\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"w-full\"\n};\nconst _hoisted_5 = {\n  class: \"flex justify-end text-[16px]\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"w-full\"\n};\nconst _hoisted_7 = {\n  class: \"flex flex-col w-full sm:text-[12px]\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"flex flex-row border-b font-bold p-2\",\n  style: {\n    \"background-color\": \"#E1E7FD\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"flex-1 text-center\"\n}, \"문의자\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"flex-1 text-center\"\n}, \"문의내용\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"flex-1 text-center\"\n}, \"답변\")], -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"flex-1 text-center\"\n};\nconst _hoisted_10 = {\n  class: \"flex-1 text-center\"\n};\nconst _hoisted_11 = {\n  class: \"flex-1 flex flex-row text-center\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"flex-1 text-center\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"flex gap-[10px]\"\n};\nconst _hoisted_14 = [\"onUpdate:modelValue\"];\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = {\n  class: \"flex justify-center items-center mt-4\"\n};\nconst _hoisted_17 = [\"disabled\"];\nconst _hoisted_18 = {\n  class: \"flex mx-4\"\n};\nconst _hoisted_19 = [\"onClick\"];\nconst _hoisted_20 = [\"disabled\"];\nconst _hoisted_21 = {\n  key: 1\n};\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"구매내역이 없습니다.\", -1 /* HOISTED */));\nconst _hoisted_23 = [_hoisted_22];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Loading...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, \"문의 수: \" + _toDisplayString($data.chats.length) + \"개\", 1 /* TEXT */), $data.chats.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_hoisted_8, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedChats, chat => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: chat.id,\n      class: \"flex flex-row border-b p-2\",\n      style: {\n        \"background-color\": \"#FFFFFF\"\n      }\n    }, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(chat.email), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(chat.message), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, [chat.talk ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _toDisplayString(chat.talk), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => $data.inputValues[chat.id] = $event,\n      placeholder: \"답변을 입력해주세요\",\n      class: \"flex-auto px-[10px] py-[5px] border\"\n    }, null, 8 /* PROPS */, _hoisted_14), [[_vModelText, $data.inputValues[chat.id]]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.submitResponse(chat.id),\n      class: \"px-[20px] py-[10px] rounded-[8px]\",\n      style: {\n        \"background-color\": \"#4F44F0\",\n        \"color\": \"#ffffff\"\n      }\n    }, \" 완료 \", 8 /* PROPS */, _hoisted_15)]))])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.previousPage && $options.previousPage(...args)),\n    disabled: $data.currentPage === 1\n  }, \"◀\", 8 /* PROPS */, _hoisted_17), _createElementVNode(\"div\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.pageNumbers, page => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: page,\n      onClick: $event => $options.goToPage(page),\n      class: _normalizeClass([{\n        'bg-blue-500 text-white': page === $data.currentPage,\n        'bg-gray-200': page !== $data.currentPage\n      }, \"mx-1 px-3 py-1 rounded\"])\n    }, _toDisplayString(page), 11 /* TEXT, CLASS, PROPS */, _hoisted_19);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage === $options.totalPages\n  }, \"▶\", 8 /* PROPS */, _hoisted_20)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [..._hoisted_23]))]))]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","key","_hoisted_22","_createElementBlock","_hoisted_1","_hoisted_2","$data","loading","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","chats","length","_hoisted_6","_hoisted_7","_hoisted_8","_Fragment","_renderList","$options","paginatedChats","chat","id","_hoisted_9","email","_hoisted_10","message","_hoisted_11","talk","_hoisted_12","_hoisted_13","type","$event","inputValues","placeholder","_hoisted_14","onClick","submitResponse","_hoisted_15","_hoisted_16","_cache","args","previousPage","disabled","currentPage","_hoisted_17","_hoisted_18","pageNumbers","page","goToPage","_normalizeClass","_hoisted_19","nextPage","totalPages","_hoisted_20","_hoisted_21","_hoisted_23"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/manege/ADM.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-center justify-center px-[12.5%] pt-[109px] pb-[200px]\" style=\"background-color: #F2F4F8\">\n    <div class=\"mb-[50px] text-[45px] sm:text-[30px] font-bold\">문의사항</div>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-else class=\"w-full\">\n      <div class=\"flex justify-end text-[16px]\">문의 수: {{ chats.length }}개</div>\n      <div v-if=\"chats.length\" class=\"w-full\">\n        <div class=\"flex flex-col w-full sm:text-[12px]\">\n          <div class=\"flex flex-row border-b font-bold p-2\" style=\"background-color:#E1E7FD\">\n            <div class=\"flex-1 text-center\">문의자</div>\n            <div class=\"flex-1 text-center\">문의내용</div>\n            <div class=\"flex-1 text-center\">답변</div>\n          </div>\n          <div v-for=\"chat in paginatedChats\" :key=\"chat.id\" class=\"flex flex-row border-b p-2\" style=\"background-color:#FFFFFF\">\n            <div class=\"flex-1 text-center\">{{ chat.email }}</div>\n            <div class=\"flex-1 text-center\">{{ chat.message }}</div>\n            <div class=\"flex-1 flex flex-row text-center\">\n              <div v-if=\"chat.talk\" class=\"flex-1 text-center\">{{ chat.talk }}</div>\n              <div v-else class=\"flex gap-[10px]\">\n                <input \n                  type=\"text\" \n                  v-model=\"inputValues[chat.id]\" \n                  placeholder=\"답변을 입력해주세요\" \n                  class=\"flex-auto px-[10px] py-[5px] border\"\n                >\n                <button \n                  @click=\"submitResponse(chat.id)\" \n                  class=\"px-[20px] py-[10px] rounded-[8px]\" \n                  style=\"background-color:#4F44F0; color:#ffffff\"\n                >\n                  완료\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex justify-center items-center mt-4\">\n          <button @click=\"previousPage\" :disabled=\"currentPage === 1\">◀</button>\n          <div class=\"flex mx-4\">\n            <button \n              v-for=\"page in pageNumbers\" \n              :key=\"page\" \n              @click=\"goToPage(page)\"\n              :class=\"{'bg-blue-500 text-white': page === currentPage, 'bg-gray-200': page !== currentPage}\" \n              class=\"mx-1 px-3 py-1 rounded\"\n            >\n              {{ page }}\n            </button>\n          </div>\n          <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">▶</button>\n        </div>\n      </div>\n      <div v-else>\n        <p>구매내역이 없습니다.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ChatContent',\n  data() {\n    return {\n      chats: [],\n      loading: true,\n      error: null,\n      email: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      inputValues: {},  // 각 채팅의 답변을 저장할 객체\n    };\n  },\n  mounted() {\n    this.email = sessionStorage.getItem(\"email\");\n    this.fetchChats();\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.chats.length / this.itemsPerPage);\n    },\n    paginatedChats() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.chats.slice(start, end);\n    },\n    pageNumbers() {\n      const pages = [];\n      for (let i = 1; i <= this.totalPages; i++) {\n        pages.push(i);\n      }\n      return pages;\n    },\n  },\n  methods: {\n    async fetchChats() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/chatM', {\n          email: this.email,\n        });\n        this.chats = response.data.data;\n        this.loading = false; \n        this.initializeInputValues();  // 초기화\n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch chat information'; \n        this.loading = false;\n      }\n    },\n    initializeInputValues() {\n      this.chats.forEach(chat => {\n        this.inputValues[chat.id] = ''; \n      });\n    },\n    async submitResponse(chatId) {\n      const responseText = this.inputValues[chatId];\n      if (!responseText) {\n        alert('답변을 입력해주세요.');\n        return;\n      }\n      \n      try {\n        await axios.post('http://127.0.0.1:8000/talk', {\n          email: this.email,\n          messageId: chatId,\n          talk: responseText\n        });\n        this.fetchChats(); // 업데이트 후 채팅 재요청\n        console.log('Response submitted successfully.');\n      } catch (error) {\n        console.error('Failed to update chat:', error.response?.data || error.message);\n        this.error = 'Failed to submit response';\n      }\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage -= 1;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage += 1;\n      }\n    },\n    goToPage(page) {\n      this.currentPage = page;\n    },\n  }\n};\n</script>\n\n<style scoped>\n@media (max-width: 768px) {\n  .conbox {\n    margin-left: 0px;\n    width: 100%;\n    overflow-x: scroll;\n    white-space: nowrap;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}