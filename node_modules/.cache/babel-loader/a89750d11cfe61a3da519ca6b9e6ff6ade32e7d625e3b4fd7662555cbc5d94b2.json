{"ast":null,"code":"// SDK에서 TossPayments를 가져옵니다.\nimport TossPayments from '@tosspayments/payment-sdk';\nexport default {\n  data() {\n    return {\n      couponApplied: false,\n      amount: 50000,\n      clientKey: 'test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm',\n      customerKey: '3blrC04giS82FlXAEiVeP',\n      tossPayments: null,\n      widgets: null\n    };\n  },\n  mounted() {\n    this.initializeTossPayments();\n  },\n  methods: {\n    async initializeTossPayments() {\n      try {\n        // TossPayments SDK를 올바르게 초기화합니다.\n        this.tossPayments = TossPayments.initialize({\n          clientKey: this.clientKey,\n          customerKey: this.customerKey\n        });\n\n        // 예시: 위젯 설정 또는 필요한 구성 설정\n        this.widgets = this.tossPayments.widgets();\n\n        // 예시: 초기 금액 설정\n        await this.widgets.setAmount({\n          currency: 'KRW',\n          value: this.amount\n        });\n\n        // 예시: 결제 방법 및 약관 렌더링\n        await Promise.all([this.renderPaymentMethods(), this.renderAgreement()]);\n      } catch (error) {\n        console.error('Toss Payments 초기화 실패:', error);\n        // 초기화 오류 처리\n      }\n    },\n    async renderPaymentMethods() {\n      // 예시: 결제 방법 렌더링 - this.widgets.renderPaymentMethods() 사용\n      // 예시: await this.widgets.renderPaymentMethods({ selector: this.$refs.paymentMethod, variantKey: 'DEFAULT' });\n    },\n    async renderAgreement() {\n      // 예시: 약관 렌더링 - this.widgets.renderAgreement() 사용\n      // 예시: await this.widgets.renderAgreement({ selector: this.$refs.agreement, variantKey: 'AGREEMENT' });\n    },\n    async applyCoupon() {\n      // 쿠폰 적용에 따라 금액 조정 및 UI 업데이트\n    },\n    async processPayment() {\n      // 결제 처리 로직 구현\n    }\n  }\n};","map":{"version":3,"names":["TossPayments","data","couponApplied","amount","clientKey","customerKey","tossPayments","widgets","mounted","initializeTossPayments","methods","initialize","setAmount","currency","value","Promise","all","renderPaymentMethods","renderAgreement","error","console","applyCoupon","processPayment"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/toss/TossCheck.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 할인 쿠폰 -->\n    <div>\n      <input type=\"checkbox\" id=\"coupon-box\" @change=\"applyCoupon\" />\n      <label for=\"coupon-box\"> 5,000원 쿠폰 적용 </label>\n    </div>\n    <!-- 결제 UI -->\n    <div ref=\"paymentMethod\"></div>\n    <!-- 이용약관 UI -->\n    <div ref=\"agreement\"></div>\n    <!-- 결제하기 버튼 -->\n    <button class=\"button\" @click=\"processPayment\" style=\"margin-top: 30px\">결제하기</button>\n  </div>\n</template>\n\n<script>\n// SDK에서 TossPayments를 가져옵니다.\nimport TossPayments from '@tosspayments/payment-sdk';\n\nexport default {\n  data() {\n    return {\n      couponApplied: false,\n      amount: 50000,\n      clientKey: 'test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm',\n      customerKey: '3blrC04giS82FlXAEiVeP',\n      tossPayments: null,\n      widgets: null\n    };\n  },\n  mounted() {\n    this.initializeTossPayments();\n  },\n  methods: {\n    async initializeTossPayments() {\n      try {\n        // TossPayments SDK를 올바르게 초기화합니다.\n        this.tossPayments = TossPayments.initialize({\n          clientKey: this.clientKey,\n          customerKey: this.customerKey\n        });\n\n        // 예시: 위젯 설정 또는 필요한 구성 설정\n        this.widgets = this.tossPayments.widgets();\n        \n        // 예시: 초기 금액 설정\n        await this.widgets.setAmount({\n          currency: 'KRW',\n          value: this.amount\n        });\n\n        // 예시: 결제 방법 및 약관 렌더링\n        await Promise.all([\n          this.renderPaymentMethods(),\n          this.renderAgreement()\n        ]);\n      } catch (error) {\n        console.error('Toss Payments 초기화 실패:', error);\n        // 초기화 오류 처리\n      }\n    },\n    async renderPaymentMethods() {\n      // 예시: 결제 방법 렌더링 - this.widgets.renderPaymentMethods() 사용\n      // 예시: await this.widgets.renderPaymentMethods({ selector: this.$refs.paymentMethod, variantKey: 'DEFAULT' });\n    },\n    async renderAgreement() {\n      // 예시: 약관 렌더링 - this.widgets.renderAgreement() 사용\n      // 예시: await this.widgets.renderAgreement({ selector: this.$refs.agreement, variantKey: 'AGREEMENT' });\n    },\n    async applyCoupon() {\n      // 쿠폰 적용에 따라 금액 조정 및 UI 업데이트\n    },\n    async processPayment() {\n      // 결제 처리 로직 구현\n    }\n  }\n};\n\n\n</script>\n\n<style>\n/* 필요한 스타일링 추가 */\n</style>\n"],"mappings":"AAiBA;AACA,OAAOA,YAAW,MAAO,2BAA2B;AAEpD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,MAAM,EAAE,KAAK;MACbC,SAAS,EAAE,wCAAwC;MACnDC,WAAW,EAAE,uBAAuB;MACpCC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,sBAAsB,CAAC,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,sBAAsBA,CAAA,EAAG;MAC7B,IAAI;QACF;QACA,IAAI,CAACH,YAAW,GAAIN,YAAY,CAACW,UAAU,CAAC;UAC1CP,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBC,WAAW,EAAE,IAAI,CAACA;QACpB,CAAC,CAAC;;QAEF;QACA,IAAI,CAACE,OAAM,GAAI,IAAI,CAACD,YAAY,CAACC,OAAO,CAAC,CAAC;;QAE1C;QACA,MAAM,IAAI,CAACA,OAAO,CAACK,SAAS,CAAC;UAC3BC,QAAQ,EAAE,KAAK;UACfC,KAAK,EAAE,IAAI,CAACX;QACd,CAAC,CAAC;;QAEF;QACA,MAAMY,OAAO,CAACC,GAAG,CAAC,CAChB,IAAI,CAACC,oBAAoB,CAAC,CAAC,EAC3B,IAAI,CAACC,eAAe,CAAC,EACtB,CAAC;MACJ,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C;MACF;IACF,CAAC;IACD,MAAMF,oBAAoBA,CAAA,EAAG;MAC3B;MACA;IAAA,CACD;IACD,MAAMC,eAAeA,CAAA,EAAG;MACtB;MACA;IAAA,CACD;IACD,MAAMG,WAAWA,CAAA,EAAG;MAClB;IAAA,CACD;IACD,MAAMC,cAAcA,CAAA,EAAG;MACrB;IAAA;EAEJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}