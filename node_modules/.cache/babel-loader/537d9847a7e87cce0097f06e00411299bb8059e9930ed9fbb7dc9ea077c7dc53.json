{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'CreditContent3',\n  data() {\n    return {\n      credits: [],\n      loading: true,\n      error: null,\n      customerName: '',\n      currentPage: 1,\n      itemsPerPage: 10\n    };\n  },\n  computed: {\n    paginatedCredits() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.credits.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.credits.length / this.itemsPerPage);\n    }\n  },\n  mounted() {\n    sessionStorage.setItem('checkNum', 2);\n    let name = sessionStorage.getItem(\"name\");\n    this.customerName = name;\n    this.fetchCredits();\n  },\n  methods: {\n    async fetchCredits() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/datab', {\n          customerName: this.customerName\n        });\n        console.log('API Response:', response.data); // 데이터 확인\n        this.credits = response.data.data;\n        this.loading = false;\n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information';\n        this.loading = false;\n      }\n    },\n    formatAmount(amount) {\n      return Math.floor(amount);\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages()) {\n        this.currentPage++;\n      }\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","credits","loading","error","customerName","currentPage","itemsPerPage","computed","paginatedCredits","start","end","slice","totalPages","Math","ceil","length","mounted","sessionStorage","setItem","getItem","fetchCredits","methods","response","post","console","log","message","formatAmount","amount","floor","nextPage","previousPage"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/credit/CreditContent3.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-center justify-center px-[12.5%] pt-[109px] pb-[200px]\" style=\"background-color: #F2F4F8\">\n    <div class=\"mb-[50px] text-[45px] sm:text-[30px] font-bold\">크레딧 구매목록</div>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-else class=\"w-full\">\n      <div v-if=\"credits.length\" class=\"w-full\">\n        <div class=\"flex flex-col w-full sm:text-[12px]\">\n          <div class=\"flex flex-row border-b font-bold p-2\" style=\"background-color:#E1E7FD\">\n            <div class=\"flex-1 text-center\">결제금액</div>\n            <div class=\"flex-1 text-center\">구매한 상품</div>\n            <div class=\"flex-1 text-center\">구매자</div>\n          </div>\n          <!-- 사용해야 할 paginatedCredits 사용 -->\n          <div v-for=\"credit in paginatedCredits\" :key=\"credit.id\" class=\"flex flex-row border-b p-2\" style=\"background-color:#FFFFFF\">\n            <div class=\"flex-1 text-center\">{{ formatAmount(credit.amount) }}원</div>\n            <div class=\"flex-1 text-center\">{{ credit.order_name }}</div>\n            <div class=\"flex-1 text-center\">{{ credit.customer_name }}</div>\n          </div>\n        </div>\n        <div class=\"flex justify-between mt-4\">\n          <button @click=\"previousPage\" :disabled=\"currentPage === 1\">Previous</button>\n          <span>Page {{ currentPage }} of {{ totalPages() }}</span>\n          <button @click=\"nextPage\" :disabled=\"currentPage === totalPages()\">Next</button>\n        </div>\n      </div>\n      <div v-else>\n        <p>구매내역이 없습니다.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'CreditContent3',\n  data() {\n    return {\n      credits: [],\n      loading: true,\n      error: null,\n      customerName: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n    };\n  },\n  computed: {\n    paginatedCredits() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.credits.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.credits.length / this.itemsPerPage);\n    }\n  },\n  mounted() {\n    sessionStorage.setItem('checkNum', 2);\n    let name = sessionStorage.getItem(\"name\");\n    this.customerName = name;\n    this.fetchCredits();\n  },\n  methods: {\n    async fetchCredits() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/datab', {\n          customerName: this.customerName,\n        });\n        console.log('API Response:', response.data); // 데이터 확인\n        this.credits = response.data.data;\n        this.loading = false; \n      } catch (error) {\n        console.error('Server responded with error:', error.response?.data || error.message);\n        this.error = 'Failed to fetch credit information'; \n        this.loading = false;\n      }\n    },\n    formatAmount(amount) {\n      return Math.floor(amount); \n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages()) {\n        this.currentPage++;\n      }\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 페이지네이션 버튼 스타일 조정 */\nbutton {\n  background-color: #007BFF;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 20px;\n  cursor: pointer;\n}\nbutton:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\nbutton + button {\n  margin-left: 10px;\n}\n</style>\n"],"mappings":"AAiCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,IAAI;MACXC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACJ,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMI,GAAE,GAAID,KAAI,GAAI,IAAI,CAACH,YAAY;MACrC,OAAO,IAAI,CAACL,OAAO,CAACU,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IACvC,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACb,OAAO,CAACc,MAAK,GAAI,IAAI,CAACT,YAAY,CAAC;IAC3D;EACF,CAAC;EACDU,OAAOA,CAAA,EAAG;IACRC,cAAc,CAACC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;IACrC,IAAInB,IAAG,GAAIkB,cAAc,CAACE,OAAO,CAAC,MAAM,CAAC;IACzC,IAAI,CAACf,YAAW,GAAIL,IAAI;IACxB,IAAI,CAACqB,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMxB,KAAK,CAACyB,IAAI,CAAC,6BAA6B,EAAE;UAC/DnB,YAAY,EAAE,IAAI,CAACA;QACrB,CAAC,CAAC;QACFoB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACtB,IAAI,CAAC,EAAE;QAC7C,IAAI,CAACC,OAAM,GAAIqB,QAAQ,CAACtB,IAAI,CAACA,IAAI;QACjC,IAAI,CAACE,OAAM,GAAI,KAAK;MACtB,EAAE,OAAOC,KAAK,EAAE;QACdqB,OAAO,CAACrB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACmB,QAAQ,EAAEtB,IAAG,IAAKG,KAAK,CAACuB,OAAO,CAAC;QACpF,IAAI,CAACvB,KAAI,GAAI,oCAAoC;QACjD,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACDyB,YAAYA,CAACC,MAAM,EAAE;MACnB,OAAOf,IAAI,CAACgB,KAAK,CAACD,MAAM,CAAC;IAC3B,CAAC;IACDE,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACzB,WAAU,GAAI,IAAI,CAACO,UAAU,CAAC,CAAC,EAAE;QACxC,IAAI,CAACP,WAAW,EAAE;MACpB;IACF,CAAC;IACD0B,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAAC1B,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}