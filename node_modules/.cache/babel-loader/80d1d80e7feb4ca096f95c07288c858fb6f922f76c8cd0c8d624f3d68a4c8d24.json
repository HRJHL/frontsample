{"ast":null,"code":"import { loadPaymentWidget, ANONYMOUS } from \"@tosspayments/payment-sdk\";\nimport { nanoid } from \"nanoid\";\nexport default {\n  data() {\n    return {\n      paymentWidget: null,\n      paymentMethodWidget: null,\n      // TODO: clientKey는 개발자센터의 결제위젯 연동 키 > 클라이언트 키로 바꾸세요.\n      // TODO: customerKey는 구매자와 1:1 관계로 무작위한 고유값을 생성하세요.\n      clientKey: \"test_ck_Z61JOxRQVEnMKwkkDyw0rW0X9bAq\",\n      customerKey: \"afdsafsdf21\",\n      amount: 50000,\n      inputEnabled: false\n    };\n  },\n  methods: {\n    async requestPayment() {\n      try {\n        if (this.paymentWidget) {\n          // ------ '결제하기' 버튼 누르면 결제창 띄우기 ------\n          // 결제를 요청하기 전에 orderId, amount를 서버에 저장하세요.\n          // 결제 과정에서 악의적으로 결제 금액이 바뀌는 것을 확인하는 용도입니다.\n          // @docs https://docs.tosspayments.com/reference/widget-sdk#requestpayment결제-정보\n          await this.paymentWidget.requestPayment({\n            orderId: nanoid(),\n            orderName: \"토스 티셔츠 외 2건\",\n            customerName: \"김토스\",\n            customerEmail: \"customer123@gmail.com\",\n            customerMobilePhone: \"01012341234\",\n            successUrl: `${window.location.origin}/success`,\n            failUrl: `${window.location.origin}/fail`\n          });\n        }\n      } catch (error) {\n        // 에러 처리하기\n        console.error(error);\n      }\n    },\n    async updateAmount() {\n      const coupon = document.getElementById(\"coupon-box\");\n      // ------  결제 금액 업데이트 ------\n      // @docs https://docs.tosspayments.com/reference/widget-sdk#updateamount결제-금액\n      if (coupon.checked) {\n        this.paymentMethodWidget.updateAmount(this.amount - 5000);\n      } else {\n        this.paymentMethodWidget.updateAmount(this.amount);\n      }\n    }\n  },\n  async mounted() {\n    // ------  결제위젯 초기화 ------\n    // @docs https://docs.tosspayments.com/reference/widget-sdk#sdk-설치-및-초기화\n    this.paymentWidget = await loadPaymentWidget(this.clientKey, ANONYMOUS);\n\n    // ------  결제 UI 렌더링 ------\n    // @docs https://docs.tosspayments.com/reference/widget-sdk#renderpaymentmethods선택자-결제-금액-옵션\n    this.paymentMethodWidget = this.paymentWidget.renderPaymentMethods(\"#payment-method\", {\n      value: this.amount\n    }, {\n      variantKey: \"DEFAULT\"\n    });\n    // ------  이용약관 UI 렌더링 ------\n    // @docs https://docs.tosspayments.com/reference/widget-sdk#renderagreement선택자-옵션\n    this.paymentWidget.renderAgreement(\"#agreement\", {\n      variantKey: \"AGREEMENT\"\n    });\n    this.paymentMethodWidget.on(\"ready\", () => {\n      this.inputEnabled = true;\n    });\n  }\n};","map":{"version":3,"names":["loadPaymentWidget","ANONYMOUS","nanoid","data","paymentWidget","paymentMethodWidget","clientKey","customerKey","amount","inputEnabled","methods","requestPayment","orderId","orderName","customerName","customerEmail","customerMobilePhone","successUrl","window","location","origin","failUrl","error","console","updateAmount","coupon","document","getElementById","checked","mounted","renderPaymentMethods","value","variantKey","renderAgreement","on"],"sources":["/Users/dong-eui/Desktop/sample/sendgo/src/views/toss/TossCheck.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"box_section\">\n      <!-- 결제 UI -->\n      <div id=\"payment-method\"></div>\n      <!-- 이용약관 UI -->\n      <div id=\"agreement\"></div>\n      <!-- 쿠폰 체크박스 -->\n      <div style=\"padding-left: 25px\">\n        <div class=\"checkable typography--p\">\n          <label for=\"coupon-box\" class=\"checkable__label typography--regular\">\n            <input :disabled=\"!inputEnabled\" @change=\"updateAmount\" id=\"coupon-box\" class=\"checkable__input\" type=\"checkbox\" aria-checked=\"true\" /><span class=\"checkable__label-text\"\n              >5,000원 쿠폰 적용</span\n            >\n          </label>\n        </div>\n      </div>\n      <!-- 결제하기 버튼 -->\n      <button :disabled=\"!inputEnabled\" @click=\"requestPayment\" class=\"button\" id=\"payment-button\" style=\"margin-top: 30px\">결제하기</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { loadPaymentWidget, ANONYMOUS } from \"@tosspayments/payment-sdk\";\nimport { nanoid } from \"nanoid\";\n\nexport default {\n  data() {\n    return {\n      paymentWidget: null,\n      paymentMethodWidget: null,\n      // TODO: clientKey는 개발자센터의 결제위젯 연동 키 > 클라이언트 키로 바꾸세요.\n      // TODO: customerKey는 구매자와 1:1 관계로 무작위한 고유값을 생성하세요.\n      clientKey: \"test_ck_Z61JOxRQVEnMKwkkDyw0rW0X9bAq\",\n      customerKey: \"afdsafsdf21\",\n      amount: 50000,\n      inputEnabled: false,\n    };\n  },\n  methods: {\n    async requestPayment() {\n      try {\n        if (this.paymentWidget) {\n          // ------ '결제하기' 버튼 누르면 결제창 띄우기 ------\n          // 결제를 요청하기 전에 orderId, amount를 서버에 저장하세요.\n          // 결제 과정에서 악의적으로 결제 금액이 바뀌는 것을 확인하는 용도입니다.\n          // @docs https://docs.tosspayments.com/reference/widget-sdk#requestpayment결제-정보\n          await this.paymentWidget.requestPayment({\n            orderId: nanoid(),\n            orderName: \"토스 티셔츠 외 2건\",\n            customerName: \"김토스\",\n            customerEmail: \"customer123@gmail.com\",\n            customerMobilePhone: \"01012341234\",\n            successUrl: `${window.location.origin}/success`,\n            failUrl: `${window.location.origin}/fail`,\n          });\n        }\n      } catch (error) {\n        // 에러 처리하기\n        console.error(error);\n      }\n    },\n    async updateAmount() {\n      const coupon = document.getElementById(\"coupon-box\");\n      // ------  결제 금액 업데이트 ------\n      // @docs https://docs.tosspayments.com/reference/widget-sdk#updateamount결제-금액\n      if (coupon.checked) {\n        this.paymentMethodWidget.updateAmount(this.amount - 5000);\n      } else {\n        this.paymentMethodWidget.updateAmount(this.amount);\n      }\n    },\n  },\n  async mounted() {\n    // ------  결제위젯 초기화 ------\n    // @docs https://docs.tosspayments.com/reference/widget-sdk#sdk-설치-및-초기화\n    this.paymentWidget = await loadPaymentWidget(this.clientKey, ANONYMOUS);\n\n    // ------  결제 UI 렌더링 ------\n    // @docs https://docs.tosspayments.com/reference/widget-sdk#renderpaymentmethods선택자-결제-금액-옵션\n    this.paymentMethodWidget = this.paymentWidget.renderPaymentMethods(\"#payment-method\", { value: this.amount }, { variantKey: \"DEFAULT\" });\n    // ------  이용약관 UI 렌더링 ------\n    // @docs https://docs.tosspayments.com/reference/widget-sdk#renderagreement선택자-옵션\n    this.paymentWidget.renderAgreement(\"#agreement\", { variantKey: \"AGREEMENT\" });\n\n    this.paymentMethodWidget.on(\"ready\", () => {\n      this.inputEnabled = true;\n    });\n  },\n};\n</script>"],"mappings":"AAwBA,SAASA,iBAAiB,EAAEC,SAAQ,QAAS,2BAA2B;AACxE,SAASC,MAAK,QAAS,QAAQ;AAE/B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,mBAAmB,EAAE,IAAI;MACzB;MACA;MACAC,SAAS,EAAE,sCAAsC;MACjDC,WAAW,EAAE,aAAa;MAC1BC,MAAM,EAAE,KAAK;MACbC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,IAAI,IAAI,CAACP,aAAa,EAAE;UACtB;UACA;UACA;UACA;UACA,MAAM,IAAI,CAACA,aAAa,CAACO,cAAc,CAAC;YACtCC,OAAO,EAAEV,MAAM,CAAC,CAAC;YACjBW,SAAS,EAAE,aAAa;YACxBC,YAAY,EAAE,KAAK;YACnBC,aAAa,EAAE,uBAAuB;YACtCC,mBAAmB,EAAE,aAAa;YAClCC,UAAU,EAAE,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,UAAU;YAC/CC,OAAO,EAAE,GAAGH,MAAM,CAACC,QAAQ,CAACC,MAAM;UACpC,CAAC,CAAC;QACJ;MACF,EAAE,OAAOE,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAME,YAAYA,CAAA,EAAG;MACnB,MAAMC,MAAK,GAAIC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MACpD;MACA;MACA,IAAIF,MAAM,CAACG,OAAO,EAAE;QAClB,IAAI,CAACvB,mBAAmB,CAACmB,YAAY,CAAC,IAAI,CAAChB,MAAK,GAAI,IAAI,CAAC;MAC3D,OAAO;QACL,IAAI,CAACH,mBAAmB,CAACmB,YAAY,CAAC,IAAI,CAAChB,MAAM,CAAC;MACpD;IACF;EACF,CAAC;EACD,MAAMqB,OAAOA,CAAA,EAAG;IACd;IACA;IACA,IAAI,CAACzB,aAAY,GAAI,MAAMJ,iBAAiB,CAAC,IAAI,CAACM,SAAS,EAAEL,SAAS,CAAC;;IAEvE;IACA;IACA,IAAI,CAACI,mBAAkB,GAAI,IAAI,CAACD,aAAa,CAAC0B,oBAAoB,CAAC,iBAAiB,EAAE;MAAEC,KAAK,EAAE,IAAI,CAACvB;IAAO,CAAC,EAAE;MAAEwB,UAAU,EAAE;IAAU,CAAC,CAAC;IACxI;IACA;IACA,IAAI,CAAC5B,aAAa,CAAC6B,eAAe,CAAC,YAAY,EAAE;MAAED,UAAU,EAAE;IAAY,CAAC,CAAC;IAE7E,IAAI,CAAC3B,mBAAmB,CAAC6B,EAAE,CAAC,OAAO,EAAE,MAAM;MACzC,IAAI,CAACzB,YAAW,GAAI,IAAI;IAC1B,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}